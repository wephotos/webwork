{"version":3,"sources":["webpack:///./src/views/Role.vue?c2ab","webpack:///./src/request/ResRequest.ts","webpack:///./src/views/RoleReso.vue?d97c","webpack:///./src/views/RoleUser.vue?b2c4","webpack:///./src/views/Role.vue","webpack:///./src/request/RoleRequest.ts","webpack:///./src/views/RoleForm.vue","webpack:///./src/views/RoleForm.vue?e05f","webpack:///./src/views/RoleForm.vue?b129","webpack:///./src/views/RoleUser.vue","webpack:///./node_modules/@ant-design/icons-svg/es/asn/TeamOutlined.js","webpack:///./node_modules/@ant-design/icons-vue/es/icons/TeamOutlined.js","webpack:///./src/views/RoleUser.vue?351c","webpack:///./src/views/RoleUser.vue?8a66","webpack:///./src/views/RoleReso.vue","webpack:///./src/views/RoleReso.vue?cd24","webpack:///./src/views/RoleReso.vue?a132","webpack:///./src/views/Role.vue?9c7e","webpack:///./src/views/Role.vue?4aae"],"names":["ResRequest","id","entity","parentId","pageable","roleId","request","style","href","class","load-data","onLoadData","tree-data","treeData","onSelect","title","trigger","overlay","menuKey","onContextMenuClick","node","type","key","create_role","rowKey","columns","data-source","roles","rowClassName","pagination","handleTableChange","filterDropdown","ref","placeholder","column","value","selectedKeys","size","handleSearch","confirm","dataIndex","icon","handleReset","clearFilters","filterIcon","filtered","undefined","name","text","searchText","searchedColumn","fragment","i","toLowerCase","operation","record","length","onRoleDel","onRoleEdit","onRoleUser","onRoleReso","BaseRequest","colon","model","formData","rules","label-col","wrapper-col","label","remark","onSubmit","onCancel","formRef","required","message","max","this","find","ret","code","data","error","msg","formUnref","validate","then","add","update","dialog","_ok","catch","console","log","_close","components","UserOutlined","LockOutlined","MobileOutlined","MailOutlined","PlusOutlined","LoadingOutlined","props","Number","parentName","String","Object","render","__scopeId","span","users","item","closable","color","handleDelete","userType","userName","_objectSpread","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","obj","defineProperty","configurable","writable","context","p","attrs","AntdIcon","displayName","inheritAttrs","httpReq","requestNodes","toTreeDataItems","requestRoleUsers","retRole","treeNode","Promise","resolve","dataRef","children","info","exists","some","userId","post","push","nodes","map","isLeaf","get","TeamOutlined","checkable","checkStrictly","default-expand-all","checkedKeys","onOk","checked","halfChecked","listByRoleId","resret","deepListNodes","toTreeDataItem","listNodes","ck","resources","success","reason","orderMap","ascend","descend","width","customRender","curr","index","slots","onFilterDropdownVisibleChange","visible","setTimeout","searchInput","focus","sorter","total","current","pageSize","condition","pageQuery","$dialog","height","content","handle","component","ok","callback","arr","loop","pageList","result","count","pag","filters","sortField","columnKey","sortOrder","order","Array","delete","RoleUser","RoleReso","SearchOutlined"],"mappings":"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","file":"resources/js/chunk-4fbe1114.94182d07.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Role.vue?vue&type=style&index=0&id=2da20314&scoped=true&lang=css\"","import Page from '@/types/Page'\r\nimport Pageable from '@/types/Pageable'\r\nimport { Resource } from '@/types/Resource'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 资源请求 */\r\nexport class ResRequest extends BaseRequest {\r\n    /** 查询 */\r\n    find(id: number) {\r\n        return super.get<Resource>(`/resource/get/${id}`)\r\n    }\r\n\r\n    /** 删除 */\r\n    delete(id: number) {\r\n        return super.get(`/resource/delete/${id}`)\r\n    }\r\n\r\n    /** 添加资源 */\r\n    add(entity: Resource) {\r\n        return super.post('/resource/add', entity)\r\n    }\r\n\r\n    /** 更新资源 */\r\n    update(entity: Resource) {\r\n        return super.post('/resource/update', entity)\r\n    }\r\n\r\n    /** 获取权限子节点 */\r\n    listNodes(parentId?: number) {\r\n        return super.get<TreeNode[]>('/resource/list-nodes' + (parentId ? `?parentId=${parentId}` : ''))\r\n    }\r\n\r\n    /** 分页查询 */\r\n    pageList(pageable: Pageable) {\r\n        return super.post<Page<Resource>>('/resource/page', pageable)\r\n    }\r\n\r\n    /** 获取全部树节点，包含自己 */\r\n    deepListNodes(parentId?: number) {\r\n        return super.get<TreeNode[]>('/resource/deep-tree-nodes' + (parentId ? `?parentId=${parentId}` : ''))\r\n    }\r\n\r\n    /** 获取角色下全部资源 */\r\n    listByRoleId(roleId: number) {\r\n        return super.get<Resource[]>(`/resource/list-by-role?roleId=${roleId}`)\r\n    }\r\n}\r\nconst request = new ResRequest()\r\nexport default request\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RoleReso.vue?vue&type=style&index=0&id=d789c24a&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./RoleUser.vue?vue&type=style&index=0&id=5f281080&scoped=true&lang=css\"","<template>\r\n  <a-layout class=\"a-layout\">\r\n    <a-layout-sider class=\"a-layout-sider\" @contextmenu.prevent>\r\n      <a-tree\r\n        :load-data=\"onLoadData\"\r\n        :tree-data=\"treeData\"\r\n        @select=\"onSelect\"\r\n        style=\"height: 100%\"\r\n        @contextmenu.prevent\r\n      >\r\n        <template #title=\"node\">\r\n          <a-dropdown :trigger=\"['contextmenu']\">\r\n            <span @contextmenu.prevent>{{ node.title }}</span>\r\n            <template #overlay>\r\n              <a-menu\r\n                @click=\"({ key: menuKey }) => onContextMenuClick(node, menuKey)\"\r\n              >\r\n                <!-- 应用菜单 -->\r\n                <template v-if=\"node.type == 1\">\r\n                  <a-menu-item :key=\"create_role\">新建角色</a-menu-item>\r\n                </template>\r\n              </a-menu>\r\n            </template>\r\n          </a-dropdown>\r\n        </template>\r\n      </a-tree>\r\n    </a-layout-sider>\r\n    <a-layout-content class=\"a-layout-content\">\r\n      <a-table\r\n        class=\"ant-table-striped\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :data-source=\"roles\"\r\n        :rowClassName=\"\r\n          (record, index) => (index % 2 === 1 ? 'table-striped' : null)\r\n        \"\r\n        :pagination=\"pagination\"\r\n        @change=\"handleTableChange\"\r\n      >\r\n        <!-- 自定义筛选菜单 -->\r\n        <template\r\n          #filterDropdown=\"{\r\n            setSelectedKeys,\r\n            selectedKeys,\r\n            confirm,\r\n            clearFilters,\r\n            column\r\n          }\"\r\n        >\r\n          <div style=\"padding: 8px\">\r\n            <a-input\r\n              ref=\"searchInput\"\r\n              :placeholder=\"`搜索 ${column.title}`\"\r\n              :value=\"selectedKeys[0]\"\r\n              style=\"width: 188px; margin-bottom: 8px; display: block\"\r\n              @change=\"\r\n                (e) => setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n              \"\r\n              @pressEnter=\"\r\n                handleSearch(selectedKeys, confirm, column.dataIndex)\r\n              \"\r\n            />\r\n            <a-button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              style=\"width: 90px; margin-right: 8px\"\r\n              @click=\"handleSearch(selectedKeys, confirm, column.dataIndex)\"\r\n            >\r\n              <template #icon><SearchOutlined /></template>\r\n              Search\r\n            </a-button>\r\n            <a-button\r\n              size=\"small\"\r\n              style=\"width: 90px\"\r\n              @click=\"handleReset(clearFilters)\"\r\n            >\r\n              Reset\r\n            </a-button>\r\n          </div>\r\n        </template>\r\n        <template #filterIcon=\"filtered\">\r\n          <search-outlined\r\n            :style=\"{ color: filtered ? '#108ee9' : undefined }\"\r\n          />\r\n        </template>\r\n        <template #name=\"{ text, column }\">\r\n          <span v-if=\"searchText && searchedColumn === column.dataIndex\">\r\n            <template\r\n              v-for=\"(fragment, i) in text\r\n                .toString()\r\n                .split(new RegExp(`(?<=${searchText})|(?=${searchText})`, 'i'))\"\r\n            >\r\n              <mark\r\n                v-if=\"fragment.toLowerCase() === searchText.toLowerCase()\"\r\n                class=\"highlight\"\r\n                :key=\"i\"\r\n              >\r\n                {{ fragment }}\r\n              </mark>\r\n              <template v-else>{{ fragment }}</template>\r\n            </template>\r\n          </span>\r\n          <template v-else>\r\n            {{ text }}\r\n          </template>\r\n        </template>\r\n        <!-- 操作列模板 -->\r\n        <template #operation=\"{ record }\">\r\n          <a-space>\r\n            <a-popconfirm\r\n              v-if=\"roles.length\"\r\n              title=\"您确定要删除吗?\"\r\n              @confirm=\"onRoleDel(record)\"\r\n            >\r\n              <a href=\"javascript:void(0);\">删除</a>\r\n            </a-popconfirm>\r\n            <a href=\"javascript:void(0);\" @click=\"onRoleEdit(record)\">编辑</a>\r\n            <a href=\"javascript:void(0);\" @click=\"onRoleUser(record)\">人员</a>\r\n            <a href=\"javascript:void(0);\" @click=\"onRoleReso(record)\"\r\n              >权限</a\r\n            >\r\n          </a-space>\r\n        </template>\r\n      </a-table>\r\n    </a-layout-content>\r\n  </a-layout>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { ref, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { SearchOutlined } from '@ant-design/icons-vue'\r\nimport {\r\n  TableState,\r\n  TableStateFilters\r\n} from 'ant-design-vue/es/table/interface'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport request from '@/request/RoleRequest'\r\nimport Pageable from '@/types/Pageable'\r\nimport { Role } from '@/types/Role'\r\nimport RoleForm from './RoleForm.vue'\r\nimport RoleUserVue from './RoleUser.vue'\r\nimport RoleResoVue from './RoleReso.vue'\r\n\r\n// 分页数据类型\r\ntype Pagination = TableState['pagination']\r\n// 排序映射\r\nconst orderMap: { [key: string]: string } = {\r\n  ascend: 'ASC',\r\n  descend: 'DESC'\r\n}\r\n@Options({\r\n  components: {\r\n    SearchOutlined\r\n  }\r\n})\r\nexport default class RoleVue extends Vue {\r\n  // 权限树数据源\r\n  treeData: TreeDataItem[] = []\r\n\r\n  // 权限列定义\r\n  columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'number',\r\n      width: 100,\r\n      customRender: (info: { text: string; record: Role; index: number }) => {\r\n        return (this.pageable.curr - 1) * this.pageable.size + info.index + 1\r\n      }\r\n    },\r\n    {\r\n      title: '名称',\r\n      dataIndex: 'name',\r\n      width: 220,\r\n      slots: {\r\n        filterDropdown: 'filterDropdown',\r\n        filterIcon: 'filterIcon',\r\n        customRender: 'name'\r\n      },\r\n      onFilterDropdownVisibleChange: (visible: boolean) => {\r\n        if (visible) {\r\n          setTimeout(() => {\r\n            const searchInput = unref(this.searchInput)\r\n            searchInput && searchInput.focus()\r\n          }, 0)\r\n        }\r\n      }\r\n    },\r\n    { title: '所属应用', dataIndex: 'app', width: 200 },\r\n    { title: '备注', dataIndex: 'remark' },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'createTime',\r\n      width: 200,\r\n      sorter: true,\r\n      key: 'create_time'\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      width: 200,\r\n      slots: { customRender: 'operation' }\r\n    }\r\n  ]\r\n\r\n  // 表格数据\r\n  roles: Role[] = []\r\n\r\n  // 搜索\r\n  searchInput = ref<HTMLInputElement>()\r\n  searchText = ''\r\n  searchedColumn = ''\r\n\r\n  // 分页参数定义\r\n  pagination = {\r\n    total: 200,\r\n    current: 1,\r\n    pageSize: 10\r\n  }\r\n\r\n  // 分页条件\r\n  pageable: Pageable = {\r\n    curr: this.pagination.current,\r\n    size: this.pagination.pageSize,\r\n    condition: {}\r\n  }\r\n\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.listNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toTreeDataItem(ret.data)\r\n    // 加载列表\r\n    this.pageQuery()\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.listNodes(treeNode.dataRef.key as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toTreeDataItem(ret.data)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}) {\r\n      this.$dialog({\r\n      title: '新建角色',\r\n      width: 550,\r\n      height: 300,\r\n      content: {\r\n        handle: true,\r\n        props: {\r\n            parentId: node.key,\r\n            parentName: node.title\r\n        },\r\n        component: RoleForm\r\n      },\r\n      ok: () => {\r\n        this.pageQuery()\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    console.log(selectedKeys, info)\r\n    this.pageable.condition.parentId = info.node.dataRef.key\r\n    this.pageQuery()\r\n  }\r\n\r\n  /** 转换树节点数据 */\r\n  toTreeDataItem(nodes: TreeNode[]) {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0单位 1应用 2角色\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 1\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  toTreeDataItemOne(record: Role) {\r\n    return {\r\n      key: record.id,\r\n      type: record.type, // 节点类型 0单位 1应用 2角色\r\n      title: record.name,\r\n      code: record.code,\r\n      isLeaf: record.type === 1\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n\r\n  // 分页查询资源列表\r\n  async pageQuery() {\r\n    const result = await request.pageList(this.pageable)\r\n    if (result.code === 0) {\r\n      this.roles = result.data.data\r\n      this.pagination.total = result.data.count\r\n    } else {\r\n      message.error(result.msg)\r\n    }\r\n  }\r\n\r\n  // 表格变动监听\r\n  handleTableChange(\r\n    pag: Pagination,\r\n    filters: TableStateFilters,\r\n    sorter: { field: string; order: string; columnKey: string }\r\n  ) {\r\n    this.pagination.current = pag?.current || 1\r\n    this.pageable.sortField = sorter.columnKey || ''\r\n    this.pageable.sortOrder = orderMap[sorter.order] || ''\r\n    this.pageable.condition.name =\r\n      filters.name instanceof Array ? filters.name[0] : ''\r\n    this.pageQuery()\r\n  }\r\n\r\n  /** 列表搜索 */\r\n  handleSearch(selectedKeys: string[], confirm: Function, dataIndex: string) {\r\n    confirm()\r\n    this.searchText = selectedKeys[0] || ''\r\n    this.searchedColumn = dataIndex\r\n  }\r\n\r\n  /** 查询条件重置 */\r\n  handleReset(clearFilters: Function) {\r\n    clearFilters()\r\n    this.searchText = ''\r\n  }\r\n\r\n  /** 删除权限 */\r\n  async onRoleDel(record: Role) {\r\n    const ret = await request.delete(record.id as number)\r\n    if (ret.code === 0) {\r\n      this.pageQuery()\r\n    } else {\r\n      message.error(`删除失败:${ret.msg}`)\r\n    }\r\n  }\r\n\r\n  // 编辑角色\r\n  onRoleEdit(record: Role) {\r\n    this.$dialog({\r\n      title: '编辑角色',\r\n      width: 550,\r\n      height: 300,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: RoleForm,\r\n        props: { id: record.id }\r\n      },\r\n      ok: () => {\r\n        this.pageQuery()\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  /** 角色人员 */\r\n  onRoleUser(record: Role) {\r\n    this.$dialog({\r\n      title: '角色人员',\r\n      width: 550,\r\n      height: 600,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: RoleUserVue,\r\n        props: { roleId: record.id }\r\n      },\r\n      ok: () => {\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  /** 角色授权 */\r\n  onRoleReso(record: Role) {\r\n    this.$dialog({\r\n      title: '角色权限',\r\n      width: 400,\r\n      height: 600,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: RoleResoVue,\r\n        props: { roleId: record.id, parentId: record.parentId }\r\n      },\r\n      ok: () => {\r\n        return true\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.a-layout {\r\n  height: 100%;\r\n}\r\n.a-layout-sider {\r\n  width: 250px;\r\n  overflow: auto;\r\n  background-color: #fff;\r\n}\r\n.a-layout-content {\r\n  padding: 5px 2px;\r\n  overflow: auto;\r\n}\r\n.highlight {\r\n  background-color: rgb(255, 192, 105);\r\n  padding: 0px;\r\n}\r\n</style>\r\n","import Page from '@/types/Page'\r\nimport Pageable from '@/types/Pageable'\r\nimport { Role } from '@/types/Role'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 资源请求 */\r\nexport class RoleRequest extends BaseRequest {\r\n    /** 查询 */\r\n    find(id: number) {\r\n        return super.get<Role>(`/role/get/${id}`)\r\n    }\r\n\r\n    /** 删除 */\r\n    delete(id: number) {\r\n        return super.get(`/role/delete/${id}`)\r\n    }\r\n\r\n    /** 添加资源 */\r\n    add(entity: Role) {\r\n        return super.post('/role/add', entity)\r\n    }\r\n\r\n    /** 更新资源 */\r\n    update(entity: Role) {\r\n        return super.post('/role/update', entity)\r\n    }\r\n\r\n    /** 获取权限子节点 */\r\n    listNodes(parentId?: number) {\r\n        return super.get<TreeNode[]>('/role/list-nodes' + (parentId ? `?parentId=${parentId}` : ''))\r\n    }\r\n\r\n    /** 分页查询 */\r\n    pageList(pageable: Pageable) {\r\n        return super.post<Page<Role>>('/role/page', pageable)\r\n    }\r\n}\r\nconst request = new RoleRequest()\r\nexport default request\r\n","<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    :colon=\"false\"\r\n    :model=\"formData\"\r\n    :rules=\"rules\"\r\n    :label-col=\"{ span: 4 }\"\r\n    :wrapper-col=\"{ span: 18 }\"\r\n    style=\"margin-top: 15px\"\r\n  >\r\n    <a-form-item label=\"名称\" name=\"name\">\r\n      <a-input v-model:value=\"formData.name\" />\r\n    </a-form-item>\r\n    <a-form-item label=\"备注\" name=\"remark\">\r\n      <a-input v-model:value=\"formData.remark\" />\r\n    </a-form-item>\r\n    <a-form-item :wrapper-col=\"{ span: 14, offset: 4 }\">\r\n      <a-button type=\"primary\" @click=\"onSubmit\">提交</a-button>\r\n      <a-button style=\"margin-left: 10px\" @click=\"onCancel\">取消</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { Role } from '@/types/Role'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport request from '@/request/RoleRequest'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\n\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class RoleForm extends Vue {\r\n  // 节点ID\r\n  id!: number\r\n  // 父级节点\r\n  parentId!: number\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 表单数据\r\n  formData: Role = {\r\n    id: this.id,\r\n    parentId: this.parentId\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入角色名称', trigger: 'blur' },\r\n      { max: 10, message: '角色名称最多10个字符' }\r\n    ],\r\n    remark: [\r\n      { max: 50, message: '备注最多50个字符' }\r\n    ]\r\n  }\r\n\r\n  async mounted() {\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code === 0) {\r\n        this.formData = {\r\n          ...this.formData,\r\n          ...ret.data\r\n        }\r\n      } else {\r\n        message.error(ret.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          let ret\r\n          if (!this.id) {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          } else {\r\n            ret = await request.update(data)\r\n          }\r\n          if (ret.code !== 0) {\r\n            message.error(`错误:${ret.msg}`)\r\n          } else {\r\n            this.dialog._ok(data)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<Role>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n</style>\r\n","\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { Role } from '@/types/Role'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport request from '@/request/RoleRequest'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\n\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class RoleForm extends Vue {\r\n  // 节点ID\r\n  id!: number\r\n  // 父级节点\r\n  parentId!: number\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 表单数据\r\n  formData: Role = {\r\n    id: this.id,\r\n    parentId: this.parentId\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入角色名称', trigger: 'blur' },\r\n      { max: 10, message: '角色名称最多10个字符' }\r\n    ],\r\n    remark: [\r\n      { max: 50, message: '备注最多50个字符' }\r\n    ]\r\n  }\r\n\r\n  async mounted() {\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code === 0) {\r\n        this.formData = {\r\n          ...this.formData,\r\n          ...ret.data\r\n        }\r\n      } else {\r\n        message.error(ret.msg)\r\n      }\r\n    }\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          let ret\r\n          if (!this.id) {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          } else {\r\n            ret = await request.update(data)\r\n          }\r\n          if (ret.code !== 0) {\r\n            message.error(`错误:${ret.msg}`)\r\n          } else {\r\n            this.dialog._ok(data)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<Role>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n}\r\n","import { render } from \"./RoleForm.vue?vue&type=template&id=23ba35a2&scoped=true\"\nimport script from \"./RoleForm.vue?vue&type=script&lang=ts\"\nexport * from \"./RoleForm.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-23ba35a2\"\n\nexport default script","<template>\r\n  <a-row class=\"main\">\r\n    <a-col :span=\"12\" class=\"border-right\">\r\n      <a-tree\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        @select=\"onSelect\"\r\n        style=\"height: 100%\"\r\n        @contextmenu.prevent\r\n      >\r\n      </a-tree>\r\n    </a-col>\r\n    <a-col :span=\"12\" class=\"content\">\r\n      <a-tag\r\n        v-for=\"item in users\"\r\n        :key=\"item.id\"\r\n        closable\r\n        color=\"green\"\r\n        @close=\"handleDelete(item)\"\r\n      >\r\n        <template #icon>\r\n          <UserOutlined v-if=\"item.userType == 3\" />\r\n          <TeamOutlined v-else />\r\n        </template>\r\n        {{ item.userName }}\r\n      </a-tag>\r\n    </a-col>\r\n  </a-row>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { PropType } from '@vue/runtime-core'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport { UserOutlined, TeamOutlined } from '@ant-design/icons-vue'\r\nimport { SelectEvent, TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from '@/request/BaseRequest'\r\n// 角色用户类型定义\r\nexport type RoleUser = {\r\n  id?: number;\r\n  roleId?: number;\r\n  userId?: number;\r\n  userName?: string;\r\n  userType?: number;\r\n}\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    TeamOutlined\r\n  },\r\n  props: {\r\n    roleId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class RoleUserVue extends Vue {\r\n  // 角色ID\r\n  roleId!: number\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 请求实例\r\n  httpReq = new BaseRequest()\r\n  // 角色用户\r\n  users: RoleUser[] = []\r\n  // 挂载钩子函数\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await this.requestNodes()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toTreeDataItems(ret.data)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载角色用户\r\n    const retRole = await this.requestRoleUsers(this.roleId)\r\n    if (retRole.code === 0) {\r\n      this.users = retRole.data\r\n    } else {\r\n      message.error(retRole.msg)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      this.requestNodes(treeNode.dataRef.key).then((ret) => {\r\n        treeNode.dataRef.children = this.toTreeDataItems(ret.data)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  async onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    const dataRef = info.node.dataRef\r\n    const exists = this.users.some(item => item.userId === dataRef.key)\r\n    if (exists) {\r\n      return false\r\n    }\r\n    const data: RoleUser = {\r\n      roleId: this.roleId,\r\n      userId: dataRef.key,\r\n      userName: dataRef.title,\r\n      userType: dataRef.type\r\n    }\r\n    const ret = await this.httpReq.post('/role-user/add', data)\r\n    if (ret.code === 0) {\r\n      data.id = ret.data\r\n      this.users.push(data)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toTreeDataItems(nodes: TreeNode[]) {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门 3用户\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 3\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 删除角色用户\r\n  async handleDelete(record: RoleUser) {\r\n    const ret = await this.httpReq.get(`/role-user/delete/${record.id}`)\r\n    if (ret.code === 0) {\r\n      this.users = this.users.filter((item) => item.id !== record.id)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n  }\r\n\r\n  // 获取角色成员\r\n  requestRoleUsers(roleId: number) {\r\n    return this.httpReq.get<RoleUser[]>(\r\n      `/role-user/list-by-role?roleId=${roleId}`\r\n    )\r\n  }\r\n\r\n  // 获取人员树节点\r\n  requestNodes(parentId?: number) {\r\n    return this.httpReq.get<TreeNode[]>(\r\n      '/user/list-tree-nodes' + (parentId ? `?parentId=${parentId}` : '')\r\n    )\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.main {\r\n  height: 100%;\r\n}\r\n.content {\r\n  padding: 7px;\r\n}\r\n.border-right {\r\n  border-right: 1px solid #ccc;\r\n}\r\n</style>\r\n","// This icon file is generated automatically.\nvar TeamOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M824.2 699.9a301.55 301.55 0 00-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 00-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 008 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 01612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 008-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 01-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 01612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 01-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 008 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z\" } }] }, \"name\": \"team\", \"theme\": \"outlined\" };\nexport default TeamOutlined;\n","import * as _vue from \"vue\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport TeamOutlinedSvg from \"@ant-design/icons-svg/es/asn/TeamOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TeamOutlined = function TeamOutlined(props, context) {\n  var p = _objectSpread({}, props, context.attrs);\n\n  return _vue.createVNode(AntdIcon, _vue.mergeProps(p, {\n    \"icon\": TeamOutlinedSvg\n  }), null);\n};\n\nTeamOutlined.displayName = 'TeamOutlined';\nTeamOutlined.inheritAttrs = false;\nexport default TeamOutlined;","\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { PropType } from '@vue/runtime-core'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport { UserOutlined, TeamOutlined } from '@ant-design/icons-vue'\r\nimport { SelectEvent, TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from '@/request/BaseRequest'\r\n// 角色用户类型定义\r\nexport type RoleUser = {\r\n  id?: number;\r\n  roleId?: number;\r\n  userId?: number;\r\n  userName?: string;\r\n  userType?: number;\r\n}\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    TeamOutlined\r\n  },\r\n  props: {\r\n    roleId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class RoleUserVue extends Vue {\r\n  // 角色ID\r\n  roleId!: number\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 请求实例\r\n  httpReq = new BaseRequest()\r\n  // 角色用户\r\n  users: RoleUser[] = []\r\n  // 挂载钩子函数\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await this.requestNodes()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toTreeDataItems(ret.data)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载角色用户\r\n    const retRole = await this.requestRoleUsers(this.roleId)\r\n    if (retRole.code === 0) {\r\n      this.users = retRole.data\r\n    } else {\r\n      message.error(retRole.msg)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      this.requestNodes(treeNode.dataRef.key).then((ret) => {\r\n        treeNode.dataRef.children = this.toTreeDataItems(ret.data)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  async onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    const dataRef = info.node.dataRef\r\n    const exists = this.users.some(item => item.userId === dataRef.key)\r\n    if (exists) {\r\n      return false\r\n    }\r\n    const data: RoleUser = {\r\n      roleId: this.roleId,\r\n      userId: dataRef.key,\r\n      userName: dataRef.title,\r\n      userType: dataRef.type\r\n    }\r\n    const ret = await this.httpReq.post('/role-user/add', data)\r\n    if (ret.code === 0) {\r\n      data.id = ret.data\r\n      this.users.push(data)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toTreeDataItems(nodes: TreeNode[]) {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门 3用户\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 3\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 删除角色用户\r\n  async handleDelete(record: RoleUser) {\r\n    const ret = await this.httpReq.get(`/role-user/delete/${record.id}`)\r\n    if (ret.code === 0) {\r\n      this.users = this.users.filter((item) => item.id !== record.id)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n  }\r\n\r\n  // 获取角色成员\r\n  requestRoleUsers(roleId: number) {\r\n    return this.httpReq.get<RoleUser[]>(\r\n      `/role-user/list-by-role?roleId=${roleId}`\r\n    )\r\n  }\r\n\r\n  // 获取人员树节点\r\n  requestNodes(parentId?: number) {\r\n    return this.httpReq.get<TreeNode[]>(\r\n      '/user/list-tree-nodes' + (parentId ? `?parentId=${parentId}` : '')\r\n    )\r\n  }\r\n}\r\n","import { render } from \"./RoleUser.vue?vue&type=template&id=5f281080&scoped=true\"\nimport script from \"./RoleUser.vue?vue&type=script&lang=ts\"\nexport * from \"./RoleUser.vue?vue&type=script&lang=ts\"\n\nimport \"./RoleUser.vue?vue&type=style&index=0&id=5f281080&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-5f281080\"\n\nexport default script","<template>\r\n    <a-tree\r\n        checkable\r\n        :checkStrictly=\"true\"\r\n        default-expand-all\r\n        v-if=\"treeData.length\"\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        v-model:checkedKeys=\"checkedKeys\"\r\n        @select=\"onSelect\"\r\n        @contextmenu.prevent\r\n      >\r\n    </a-tree>\r\n    <div class=\"footer\">\r\n        <a-space>\r\n          <a-button @click=\"onCancel\">取消</a-button>\r\n          <a-button @click=\"onOk\" type=\"primary\">确认</a-button>\r\n        </a-space>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { PropType } from '@vue/runtime-core'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport { SelectEvent, TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport request from '@/request/ResRequest'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from '@/request/BaseRequest'\r\n// 角色资源数据定义\r\nexport type RoleReso = {\r\n  roleId: number;\r\n  resourceId: number;\r\n}\r\n// 树选中对象\r\nexport type CheckStrictly = {\r\n  checked: number[];\r\n  halfChecked: number[];\r\n}\r\n@Options({\r\n  props: {\r\n    roleId: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class RoleResoVue extends Vue {\r\n  // 节点ID\r\n  roleId!: number\r\n  // 角色上级\r\n  parentId!: number\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 权限树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 选中节点\r\n  checkedKeys: CheckStrictly = { checked: [], halfChecked: [] }\r\n  // HTTP请求\r\n  httpReq = new BaseRequest()\r\n  // 加载应用树\r\n  async mounted() {\r\n    // 加载已勾选资源\r\n    const resret = await request.listByRoleId(this.roleId)\r\n    if (resret.code === 0) {\r\n      this.checkedKeys.checked = resret.data.map(item => item.id as number)\r\n    } else {\r\n      message.error(resret.msg)\r\n    }\r\n    // 加载组织机构根节点\r\n    const ret = await request.deepListNodes(this.parentId)\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toTreeDataItem(ret.data)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.listNodes(treeNode.dataRef.key as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toTreeDataItem(ret.data)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    console.log(selectedKeys, info)\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 确认\r\n  onOk() {\r\n    const ck = this.checkedKeys\r\n    const resources = ck.checked.concat(ck.halfChecked)\r\n    this.httpReq.post('/role-resource/save', {\r\n      roleId: this.roleId,\r\n      resources: resources\r\n    }).then(ret => {\r\n      if (ret.code === 0) {\r\n        message.success('授权成功')\r\n        this.dialog._ok()\r\n      } else {\r\n        message.error(ret.msg)\r\n      }\r\n    }).catch(reason => {\r\n      message.error(reason)\r\n    })\r\n  }\r\n\r\n  /** 转换树节点数据 */\r\n  toTreeDataItem(nodes: TreeNode[]) {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0单位 1应用 2模块 3功能\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 3\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.footer{\r\n  bottom: 5px;\r\n  width: 100%;\r\n  position: absolute;\r\n  padding: 10px 16px;\r\n  text-align: right;\r\n  background: transparent;\r\n  border-top: 1px solid #f0f0f0;\r\n  border-radius: 0 0 2px 2px;\r\n}\r\n</style>\r\n","\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { PropType } from '@vue/runtime-core'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport { SelectEvent, TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport request from '@/request/ResRequest'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from '@/request/BaseRequest'\r\n// 角色资源数据定义\r\nexport type RoleReso = {\r\n  roleId: number;\r\n  resourceId: number;\r\n}\r\n// 树选中对象\r\nexport type CheckStrictly = {\r\n  checked: number[];\r\n  halfChecked: number[];\r\n}\r\n@Options({\r\n  props: {\r\n    roleId: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class RoleResoVue extends Vue {\r\n  // 节点ID\r\n  roleId!: number\r\n  // 角色上级\r\n  parentId!: number\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 权限树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 选中节点\r\n  checkedKeys: CheckStrictly = { checked: [], halfChecked: [] }\r\n  // HTTP请求\r\n  httpReq = new BaseRequest()\r\n  // 加载应用树\r\n  async mounted() {\r\n    // 加载已勾选资源\r\n    const resret = await request.listByRoleId(this.roleId)\r\n    if (resret.code === 0) {\r\n      this.checkedKeys.checked = resret.data.map(item => item.id as number)\r\n    } else {\r\n      message.error(resret.msg)\r\n    }\r\n    // 加载组织机构根节点\r\n    const ret = await request.deepListNodes(this.parentId)\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toTreeDataItem(ret.data)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.listNodes(treeNode.dataRef.key as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toTreeDataItem(ret.data)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    console.log(selectedKeys, info)\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 确认\r\n  onOk() {\r\n    const ck = this.checkedKeys\r\n    const resources = ck.checked.concat(ck.halfChecked)\r\n    this.httpReq.post('/role-resource/save', {\r\n      roleId: this.roleId,\r\n      resources: resources\r\n    }).then(ret => {\r\n      if (ret.code === 0) {\r\n        message.success('授权成功')\r\n        this.dialog._ok()\r\n      } else {\r\n        message.error(ret.msg)\r\n      }\r\n    }).catch(reason => {\r\n      message.error(reason)\r\n    })\r\n  }\r\n\r\n  /** 转换树节点数据 */\r\n  toTreeDataItem(nodes: TreeNode[]) {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0单位 1应用 2模块 3功能\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 3\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./RoleReso.vue?vue&type=template&id=d789c24a&scoped=true\"\nimport script from \"./RoleReso.vue?vue&type=script&lang=ts\"\nexport * from \"./RoleReso.vue?vue&type=script&lang=ts\"\n\nimport \"./RoleReso.vue?vue&type=style&index=0&id=d789c24a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-d789c24a\"\n\nexport default script","\r\nimport { ref, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { SearchOutlined } from '@ant-design/icons-vue'\r\nimport {\r\n  TableState,\r\n  TableStateFilters\r\n} from 'ant-design-vue/es/table/interface'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport request from '@/request/RoleRequest'\r\nimport Pageable from '@/types/Pageable'\r\nimport { Role } from '@/types/Role'\r\nimport RoleForm from './RoleForm.vue'\r\nimport RoleUserVue from './RoleUser.vue'\r\nimport RoleResoVue from './RoleReso.vue'\r\n\r\n// 分页数据类型\r\ntype Pagination = TableState['pagination']\r\n// 排序映射\r\nconst orderMap: { [key: string]: string } = {\r\n  ascend: 'ASC',\r\n  descend: 'DESC'\r\n}\r\n@Options({\r\n  components: {\r\n    SearchOutlined\r\n  }\r\n})\r\nexport default class RoleVue extends Vue {\r\n  // 权限树数据源\r\n  treeData: TreeDataItem[] = []\r\n\r\n  // 权限列定义\r\n  columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'number',\r\n      width: 100,\r\n      customRender: (info: { text: string; record: Role; index: number }) => {\r\n        return (this.pageable.curr - 1) * this.pageable.size + info.index + 1\r\n      }\r\n    },\r\n    {\r\n      title: '名称',\r\n      dataIndex: 'name',\r\n      width: 220,\r\n      slots: {\r\n        filterDropdown: 'filterDropdown',\r\n        filterIcon: 'filterIcon',\r\n        customRender: 'name'\r\n      },\r\n      onFilterDropdownVisibleChange: (visible: boolean) => {\r\n        if (visible) {\r\n          setTimeout(() => {\r\n            const searchInput = unref(this.searchInput)\r\n            searchInput && searchInput.focus()\r\n          }, 0)\r\n        }\r\n      }\r\n    },\r\n    { title: '所属应用', dataIndex: 'app', width: 200 },\r\n    { title: '备注', dataIndex: 'remark' },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'createTime',\r\n      width: 200,\r\n      sorter: true,\r\n      key: 'create_time'\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      width: 200,\r\n      slots: { customRender: 'operation' }\r\n    }\r\n  ]\r\n\r\n  // 表格数据\r\n  roles: Role[] = []\r\n\r\n  // 搜索\r\n  searchInput = ref<HTMLInputElement>()\r\n  searchText = ''\r\n  searchedColumn = ''\r\n\r\n  // 分页参数定义\r\n  pagination = {\r\n    total: 200,\r\n    current: 1,\r\n    pageSize: 10\r\n  }\r\n\r\n  // 分页条件\r\n  pageable: Pageable = {\r\n    curr: this.pagination.current,\r\n    size: this.pagination.pageSize,\r\n    condition: {}\r\n  }\r\n\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.listNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toTreeDataItem(ret.data)\r\n    // 加载列表\r\n    this.pageQuery()\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.listNodes(treeNode.dataRef.key as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toTreeDataItem(ret.data)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}) {\r\n      this.$dialog({\r\n      title: '新建角色',\r\n      width: 550,\r\n      height: 300,\r\n      content: {\r\n        handle: true,\r\n        props: {\r\n            parentId: node.key,\r\n            parentName: node.title\r\n        },\r\n        component: RoleForm\r\n      },\r\n      ok: () => {\r\n        this.pageQuery()\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    console.log(selectedKeys, info)\r\n    this.pageable.condition.parentId = info.node.dataRef.key\r\n    this.pageQuery()\r\n  }\r\n\r\n  /** 转换树节点数据 */\r\n  toTreeDataItem(nodes: TreeNode[]) {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0单位 1应用 2角色\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 1\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  toTreeDataItemOne(record: Role) {\r\n    return {\r\n      key: record.id,\r\n      type: record.type, // 节点类型 0单位 1应用 2角色\r\n      title: record.name,\r\n      code: record.code,\r\n      isLeaf: record.type === 1\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n\r\n  // 分页查询资源列表\r\n  async pageQuery() {\r\n    const result = await request.pageList(this.pageable)\r\n    if (result.code === 0) {\r\n      this.roles = result.data.data\r\n      this.pagination.total = result.data.count\r\n    } else {\r\n      message.error(result.msg)\r\n    }\r\n  }\r\n\r\n  // 表格变动监听\r\n  handleTableChange(\r\n    pag: Pagination,\r\n    filters: TableStateFilters,\r\n    sorter: { field: string; order: string; columnKey: string }\r\n  ) {\r\n    this.pagination.current = pag?.current || 1\r\n    this.pageable.sortField = sorter.columnKey || ''\r\n    this.pageable.sortOrder = orderMap[sorter.order] || ''\r\n    this.pageable.condition.name =\r\n      filters.name instanceof Array ? filters.name[0] : ''\r\n    this.pageQuery()\r\n  }\r\n\r\n  /** 列表搜索 */\r\n  handleSearch(selectedKeys: string[], confirm: Function, dataIndex: string) {\r\n    confirm()\r\n    this.searchText = selectedKeys[0] || ''\r\n    this.searchedColumn = dataIndex\r\n  }\r\n\r\n  /** 查询条件重置 */\r\n  handleReset(clearFilters: Function) {\r\n    clearFilters()\r\n    this.searchText = ''\r\n  }\r\n\r\n  /** 删除权限 */\r\n  async onRoleDel(record: Role) {\r\n    const ret = await request.delete(record.id as number)\r\n    if (ret.code === 0) {\r\n      this.pageQuery()\r\n    } else {\r\n      message.error(`删除失败:${ret.msg}`)\r\n    }\r\n  }\r\n\r\n  // 编辑角色\r\n  onRoleEdit(record: Role) {\r\n    this.$dialog({\r\n      title: '编辑角色',\r\n      width: 550,\r\n      height: 300,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: RoleForm,\r\n        props: { id: record.id }\r\n      },\r\n      ok: () => {\r\n        this.pageQuery()\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  /** 角色人员 */\r\n  onRoleUser(record: Role) {\r\n    this.$dialog({\r\n      title: '角色人员',\r\n      width: 550,\r\n      height: 600,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: RoleUserVue,\r\n        props: { roleId: record.id }\r\n      },\r\n      ok: () => {\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  /** 角色授权 */\r\n  onRoleReso(record: Role) {\r\n    this.$dialog({\r\n      title: '角色权限',\r\n      width: 400,\r\n      height: 600,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: RoleResoVue,\r\n        props: { roleId: record.id, parentId: record.parentId }\r\n      },\r\n      ok: () => {\r\n        return true\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./Role.vue?vue&type=template&id=2da20314&scoped=true\"\nimport script from \"./Role.vue?vue&type=script&lang=ts\"\nexport * from \"./Role.vue?vue&type=script&lang=ts\"\n\nimport \"./Role.vue?vue&type=style&index=0&id=2da20314&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-2da20314\"\n\nexport default script"],"sourceRoot":""}