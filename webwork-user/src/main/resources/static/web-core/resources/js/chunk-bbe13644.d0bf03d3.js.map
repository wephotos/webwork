{"version":3,"sources":["webpack:///./src/request/GroupRequest.ts","webpack:///./src/views/Group.vue","webpack:///./src/views/GroupForm.vue","webpack:///./src/views/GroupForm.vue?71f2","webpack:///./src/views/GroupForm.vue?2159","webpack:///./src/views/Group.vue?0441","webpack:///./src/views/Group.vue?5ef1","webpack:///./src/request/UserRequest.ts","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./src/views/UserForm.vue","webpack:///./src/views/UserForm.vue?be01","webpack:///./src/views/UserForm.vue?5af4","webpack:///./src/views/UserForm.vue?4e9c"],"names":["GroupRequest","id","data","parentId","request","load-data","onLoadData","tree-data","treeData","expandedKeys","draggable","onSelect","style","title","trigger","overlay","menuKey","onContextMenuClick","node","type","key","contextMenuKeys","ADD_DEPT","ADD_GROUP","UPDATE_GROUP","DELETE_GROUP","ADD_USER","UPDATE_DEPT","DELETE_DEPT","ref","model","formData","rules","label-col","wrapper-col","label","name","value","isTop","defaultValue","parentName","disabled","onSelectTreeExpand","tree-default-expand-all","placeholder","dropdown-style","virtual","checked","enabled","onSubmit","onCancel","parentType","formRef","required","message","max","this","loadGroupNodes","ret","code","error","msg","toAntTreeNodes","find","treeNode","Promise","resolve","dataRef","children","rawId","then","toChildren","console","log","formUnref","validate","status","add","update","dialog","_ok","catch","_close","map","isLeaf","TreeNodeType","DEPT","selectable","GROUP","nodes","props","Number","String","Object","render","ContextMenuKeys","selectedKeys","info","$emit","confirm","okType","onOk","delete","res","success","loop","item","index","arr","splice","err","$dialog","width","height","content","handle","component","UserForm","deptId","deptName","ok","args","parentKey","push","dataToTreeDataItem","oldValue","callback","forEach","emits","UserRequest","user","userId","pageable","$","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","len","length","actualStart","argumentsLength","arguments","TypeError","class","colon","gutter","span","avatarData","list-type","show-upload-list","action","withCredentials","handleUploadChange","before-upload","beforeUpload","avatar","avatarKey","src","avatarUrl","alt","avatarLoading","prefix","account","password","phone","email","post","handleUserStatus","random","pattern","file","response","objectName","isJpgOrPng","isLt2M","size","components","UserOutlined","LockOutlined","MobileOutlined","MailOutlined","PlusOutlined","LoadingOutlined","__scopeId"],"mappings":"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","file":"resources/js/chunk-bbe13644.d0bf03d3.js","sourcesContent":["import { Group } from '@/types/Group'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 组织机构接口请求 */\r\nexport class GroupRequest extends BaseRequest {\r\n    /** 根据ID查询组织 */\r\n    find(id: number) {\r\n        return super.get<Group>(`/organization/get/${id}`)\r\n    }\r\n\r\n    /** 根据ID删除组织 */\r\n    delete(id: number) {\r\n        return super.get(`/organization/delete/${id}`)\r\n    }\r\n\r\n    /** 添加组织机构 */\r\n    add(data: Group) {\r\n        return super.post('/organization/add', data)\r\n    }\r\n\r\n    /** 更新组织机构 */\r\n    update(data: Group) {\r\n        return super.post('/organization/update', data)\r\n    }\r\n\r\n    /** 加载当前用户的单位树数据 */\r\n    loadGroupNodes() {\r\n        return super.get<TreeNode[]>('/organization/load-nodes')\r\n    }\n\r\n    /** 查询组织机构子节点  */\r\n    children(parentId?: number) {\r\n        return super.get<TreeNode[]>('/organization/children' + (parentId ? `?parentId=${parentId}` : ''))\r\n    }\r\n}\r\n\r\nconst request = new GroupRequest()\r\nexport default request\r\n","<template >\r\n  <a-tree\r\n    :load-data=\"onLoadData\"\r\n    :tree-data=\"treeData\"\r\n    v-model:expandedKeys=\"expandedKeys\"\r\n    draggable\r\n    @select=\"onSelect\"\r\n    style=\"height: 100%\"\r\n    @contextmenu.prevent\r\n  >\r\n    <template #title=\"node\">\r\n      <a-dropdown :trigger=\"['contextmenu']\">\r\n        <span @contextmenu.prevent>{{ node.title }}</span>\r\n        <template #overlay>\r\n          <a-menu\r\n            @click=\"({key: menuKey}) => onContextMenuClick(node, menuKey)\"\r\n          >\r\n            <!-- 单位菜单 -->\r\n            <template v-if=\"node.type == 0 || node.type == 1\">\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_DEPT\"\r\n                >新增部门</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_GROUP\"\r\n                >新增单位</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.UPDATE_GROUP\"\r\n                >更新单位</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.DELETE_GROUP\">\r\n                删除单位\r\n              </a-menu-item>\r\n            </template>\r\n            <!-- 部门菜单 -->\r\n            <template v-if=\"node.type == 2\">\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_USER\"\r\n                >新增人员</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.UPDATE_DEPT\"\r\n                >更新部门</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.DELETE_DEPT\"\r\n                >删除部门</a-menu-item\r\n              >\r\n            </template>\r\n          </a-menu>\r\n        </template>\r\n      </a-dropdown>\r\n    </template>\r\n  </a-tree>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message, Modal } from 'ant-design-vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { R } from '@/types/R'\r\nimport { Group } from '@/types/Group'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport UserForm from './UserForm.vue'\r\nimport GroupForm from './GroupForm.vue'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n// 右键菜单键\r\nenum ContextMenuKeys {\r\n  // 新增人员\r\n  ADD_USER,\r\n  // 添加部门\r\n  ADD_DEPT,\r\n  // 添加单位\r\n  ADD_GROUP,\r\n  // 更新部门\r\n  UPDATE_DEPT,\r\n  // 更新单位\r\n  UPDATE_GROUP,\r\n  // 删除部门\r\n  DELETE_DEPT,\r\n  // 删除单位\r\n  DELETE_GROUP\r\n}\r\n\r\n/**\r\n * 组织机构管理\r\n */\r\n@Options({\r\n  emits: ['select']\r\n})\r\nexport default class GroupVue extends Vue {\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 展开的KEY\r\n  expandedKeys: string[] = []\r\n  // 右键菜单枚举\r\n  contextMenuKeys = ContextMenuKeys\r\n  // 节点类型枚举\r\n  // treeNodeType = TreeNodeType\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.children()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toChildren(ret)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    this.$emit('select', selectedKeys, info)\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}, menuKey: ContextMenuKeys) {\r\n    let title\r\n    let formData: {\r\n      id?: number; // rawId\r\n      type: number; // enum NodeType\r\n      parentId?: number; // 父节点ID\r\n      parentType?: number; // 父节点类型\r\n      parentName?: string; // 父节点名称\r\n    }\r\n    if (ContextMenuKeys.ADD_DEPT === menuKey) {\r\n      title = '新增部门'\r\n      formData = {\r\n        type: TreeNodeType.DEPT,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.ADD_GROUP === menuKey) {\r\n      title = '新增单位'\r\n      formData = {\r\n        type: TreeNodeType.GROUP,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_DEPT === menuKey) {\r\n      title = '更新部门'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.DEPT\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_GROUP === menuKey) {\r\n      title = '更新单位'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.GROUP\r\n      }\r\n    } else if (\r\n      ContextMenuKeys.DELETE_DEPT === menuKey ||\r\n      ContextMenuKeys.DELETE_GROUP === menuKey\r\n    ) {\r\n      Modal.confirm({\r\n        title: `您确定要删除<${node.title}>吗?`,\r\n        okType: 'danger',\r\n        onOk: () => {\r\n          request\r\n            .delete(node.rawId)\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                message.success('删除成功')\r\n                this.loop(\r\n                  this.treeData,\r\n                  node.key as string,\r\n                  (item, index, arr) => {\r\n                    arr.splice(index, 1)\r\n                  }\r\n                )\r\n              } else {\r\n                message.error('删除失败:' + res.msg)\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              message.error(err.message)\r\n            })\r\n        }\r\n      })\r\n\r\n      return false\r\n    } else if (ContextMenuKeys.ADD_USER === menuKey) {\r\n      this.$dialog({\r\n        title: '新增用户',\r\n        width: 550,\r\n        height: 650,\r\n        max: false,\r\n        content: {\r\n          handle: true,\r\n          component: UserForm,\r\n          props: { deptId: node.rawId, deptName: node.title }\r\n        },\r\n        ok: () => {\r\n            this.$emit('select', [node.key], {\r\n                node: {\r\n                    dataRef: {\r\n                        code: node.code\r\n                    }\r\n                }\r\n            })\r\n            return true\r\n        }\r\n      })\r\n      return false\r\n    } else {\r\n      console.log(`unknow menukey ${menuKey}`)\r\n      return false\r\n    }\r\n    this.$dialog({\r\n      title: title,\r\n      width: 550,\r\n      height: 400,\r\n      content: {\r\n        handle: true,\r\n        props: formData,\r\n        component: GroupForm\r\n      },\r\n      ok: (args: unknown[]) => {\r\n        const data = args[0] as Group\r\n        const key = `${data.type}_${data.id}`\r\n        const parentKey = `${formData.parentType}_${formData.parentId}`\r\n        const treeNode = {\r\n                            id: key,\r\n                            rawId: data.id,\r\n                            type: data.type,\r\n                            name: data.name,\r\n                            code: data.code\r\n                          } as TreeNode\r\n        if (node.key === key) {\r\n          // 更新节点名称\r\n          node.dataRef.title = data.name\r\n        } else if (node.key === parentKey) {\r\n          // 当前节点下新增\r\n          if (node.dataRef.children) {\r\n            node.dataRef.children.push(this.dataToTreeDataItem(treeNode))\r\n          } else {\r\n            this.onLoadData(node)\r\n          }\r\n        } else {\r\n          // 非当前节点下新增\r\n          this.loop(\r\n            this.treeData,\r\n            parentKey,\r\n            (item, index, arr) => {\r\n              item.children && item.children.push(this.dataToTreeDataItem(treeNode))\r\n            }\r\n          )\r\n        }\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 属性监听\r\n  watchExpandedKeys(value: string[], oldValue: string[]) {\r\n    console.log('expandedKeys', value, oldValue)\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return this.dataToTreeDataItem(value)\r\n    })\r\n  }\r\n\r\n  // 数据转树节点\r\n  dataToTreeDataItem(data: TreeNode) {\r\n    return {\r\n      key: data.id,\r\n      type: data.type,\r\n      title: data.name,\r\n      code: data.code,\r\n      rawId: data.rawId,\r\n      isLeaf: data.type === TreeNodeType.DEPT\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    :model=\"formData\"\r\n    :rules=\"rules\"\r\n    :label-col=\"{ span: 4 }\"\r\n    :wrapper-col=\"{ span: 18 }\"\r\n    style=\"margin-top: 15px\"\r\n  >\r\n    <a-form-item label=\"节点名称\" name=\"name\">\r\n      <a-input v-model:value=\"formData.name\" />\r\n    </a-form-item>\r\n    <a-form-item\r\n      v-if=\"!isTop\"\r\n      label=\"上级单位\"\r\n      name=\"parentId\"\r\n    >\r\n      <a-tree-select\r\n        v-model:value=\"formData.parentId\"\r\n        :defaultValue=\"formData.parentName\"\r\n        :disabled=\"!!id\"\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        @treeExpand=\"onSelectTreeExpand\"\r\n        tree-default-expand-all\r\n        style=\"width: 100%\"\r\n        placeholder=\"请选择上级单位\"\r\n        :dropdown-style=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n      />\r\n    </a-form-item>\r\n    <a-form-item v-if=\"!isTop && type == 1\" label=\"虚拟节点\" name=\"virtual\">\r\n      <a-radio-group v-model:value=\"formData.virtual\">\r\n        <a-radio :value=\"true\">是</a-radio>\r\n        <a-radio :value=\"false\">否</a-radio>\r\n      </a-radio-group>\r\n    </a-form-item>\r\n    <a-form-item v-if=\"!isTop\" label=\"节点状态\" name=\"enabled\">\r\n      <a-switch v-model:checked=\"formData.enabled\" />\r\n    </a-form-item>\r\n    <a-form-item :wrapper-col=\"{ span: 14, offset: 4 }\">\r\n      <a-button type=\"primary\" @click=\"onSubmit\">提交</a-button>\r\n      <a-button style=\"margin-left: 10px\" @click=\"onCancel\">取消</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n/**\r\n * 组织机构表单\r\n */\r\n@Options({\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    type: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    parentType: {\r\n      type: Number\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class GroupForm extends Vue {\r\n  // 节点ID\r\n  id!: number\r\n  // 节点类型\r\n  type!: number\r\n  // 父级节点\r\n  parentId!: number\r\n  parentType!: number\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单数据\r\n  formData: Group & {\r\n    enabled?: boolean;\r\n    virtual?: boolean;\r\n    parentName?: string;\r\n  } = {\r\n    id: this.id,\r\n    enabled: true, // 默认启用\r\n    virtual: false, // 默认非虚拟节点\r\n    parentId: this.parentId,\r\n    parentType: this.parentType,\r\n    parentName: this.parentName\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入名称', trigger: 'blur' },\r\n      { max: 50, message: '名称最多50个字符' }\r\n    ],\r\n    parentId: [{ required: true, message: '请选择上级单位', trigger: 'blur', type: 'number' }]\r\n  }\r\n\r\n  // 是否顶级单位\r\n  get isTop() {\r\n    return !(this.parentId || this.formData.parentId)\r\n  }\r\n\r\n  // 加载数据\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.loadGroupNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toAntTreeNodes(ret.data)\r\n\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code !== 0) {\r\n        message.error(ret.msg)\r\n        return false\r\n      }\r\n      this.formData = {\r\n        ...this.formData,\r\n        ...ret.data\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  onSelectTreeExpand(expandedKeys: string[]) {\r\n    console.log(expandedKeys)\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          data.type = data.virtual ? 0 : this.type\r\n          data.status = data.enabled ? 1 : 0\r\n          delete data.virtual\r\n          delete data.enabled\r\n\r\n          let ret\r\n          if (!this.id) {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          } else {\r\n            ret = await request.update(data)\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok(data)\r\n          } else {\r\n            message.error(`错误:${ret.msg}`)\r\n          }\r\n        }).catch((error: ValidateErrorEntity<Group>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type,\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: value.type === TreeNodeType.GROUP\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 转换为 Ant树节点\r\n  toAntTreeNodes(nodes: TreeNode[]): TreeDataItem[] {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        rawId: node.rawId,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: node.id,\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: node.type === TreeNodeType.GROUP,\r\n        children: this.toAntTreeNodes(node.children)\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n</script>\r\n","\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n/**\r\n * 组织机构表单\r\n */\r\n@Options({\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    type: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    parentType: {\r\n      type: Number\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class GroupForm extends Vue {\r\n  // 节点ID\r\n  id!: number\r\n  // 节点类型\r\n  type!: number\r\n  // 父级节点\r\n  parentId!: number\r\n  parentType!: number\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单数据\r\n  formData: Group & {\r\n    enabled?: boolean;\r\n    virtual?: boolean;\r\n    parentName?: string;\r\n  } = {\r\n    id: this.id,\r\n    enabled: true, // 默认启用\r\n    virtual: false, // 默认非虚拟节点\r\n    parentId: this.parentId,\r\n    parentType: this.parentType,\r\n    parentName: this.parentName\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入名称', trigger: 'blur' },\r\n      { max: 50, message: '名称最多50个字符' }\r\n    ],\r\n    parentId: [{ required: true, message: '请选择上级单位', trigger: 'blur', type: 'number' }]\r\n  }\r\n\r\n  // 是否顶级单位\r\n  get isTop() {\r\n    return !(this.parentId || this.formData.parentId)\r\n  }\r\n\r\n  // 加载数据\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.loadGroupNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toAntTreeNodes(ret.data)\r\n\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code !== 0) {\r\n        message.error(ret.msg)\r\n        return false\r\n      }\r\n      this.formData = {\r\n        ...this.formData,\r\n        ...ret.data\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  onSelectTreeExpand(expandedKeys: string[]) {\r\n    console.log(expandedKeys)\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          data.type = data.virtual ? 0 : this.type\r\n          data.status = data.enabled ? 1 : 0\r\n          delete data.virtual\r\n          delete data.enabled\r\n\r\n          let ret\r\n          if (!this.id) {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          } else {\r\n            ret = await request.update(data)\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok(data)\r\n          } else {\r\n            message.error(`错误:${ret.msg}`)\r\n          }\r\n        }).catch((error: ValidateErrorEntity<Group>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type,\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: value.type === TreeNodeType.GROUP\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 转换为 Ant树节点\r\n  toAntTreeNodes(nodes: TreeNode[]): TreeDataItem[] {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        rawId: node.rawId,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: node.id,\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: node.type === TreeNodeType.GROUP,\r\n        children: this.toAntTreeNodes(node.children)\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./GroupForm.vue?vue&type=template&id=f1104cf2\"\nimport script from \"./GroupForm.vue?vue&type=script&lang=ts\"\nexport * from \"./GroupForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message, Modal } from 'ant-design-vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { R } from '@/types/R'\r\nimport { Group } from '@/types/Group'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport UserForm from './UserForm.vue'\r\nimport GroupForm from './GroupForm.vue'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n// 右键菜单键\r\nenum ContextMenuKeys {\r\n  // 新增人员\r\n  ADD_USER,\r\n  // 添加部门\r\n  ADD_DEPT,\r\n  // 添加单位\r\n  ADD_GROUP,\r\n  // 更新部门\r\n  UPDATE_DEPT,\r\n  // 更新单位\r\n  UPDATE_GROUP,\r\n  // 删除部门\r\n  DELETE_DEPT,\r\n  // 删除单位\r\n  DELETE_GROUP\r\n}\r\n\r\n/**\r\n * 组织机构管理\r\n */\r\n@Options({\r\n  emits: ['select']\r\n})\r\nexport default class GroupVue extends Vue {\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 展开的KEY\r\n  expandedKeys: string[] = []\r\n  // 右键菜单枚举\r\n  contextMenuKeys = ContextMenuKeys\r\n  // 节点类型枚举\r\n  // treeNodeType = TreeNodeType\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.children()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toChildren(ret)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    this.$emit('select', selectedKeys, info)\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}, menuKey: ContextMenuKeys) {\r\n    let title\r\n    let formData: {\r\n      id?: number; // rawId\r\n      type: number; // enum NodeType\r\n      parentId?: number; // 父节点ID\r\n      parentType?: number; // 父节点类型\r\n      parentName?: string; // 父节点名称\r\n    }\r\n    if (ContextMenuKeys.ADD_DEPT === menuKey) {\r\n      title = '新增部门'\r\n      formData = {\r\n        type: TreeNodeType.DEPT,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.ADD_GROUP === menuKey) {\r\n      title = '新增单位'\r\n      formData = {\r\n        type: TreeNodeType.GROUP,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_DEPT === menuKey) {\r\n      title = '更新部门'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.DEPT\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_GROUP === menuKey) {\r\n      title = '更新单位'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.GROUP\r\n      }\r\n    } else if (\r\n      ContextMenuKeys.DELETE_DEPT === menuKey ||\r\n      ContextMenuKeys.DELETE_GROUP === menuKey\r\n    ) {\r\n      Modal.confirm({\r\n        title: `您确定要删除<${node.title}>吗?`,\r\n        okType: 'danger',\r\n        onOk: () => {\r\n          request\r\n            .delete(node.rawId)\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                message.success('删除成功')\r\n                this.loop(\r\n                  this.treeData,\r\n                  node.key as string,\r\n                  (item, index, arr) => {\r\n                    arr.splice(index, 1)\r\n                  }\r\n                )\r\n              } else {\r\n                message.error('删除失败:' + res.msg)\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              message.error(err.message)\r\n            })\r\n        }\r\n      })\r\n\r\n      return false\r\n    } else if (ContextMenuKeys.ADD_USER === menuKey) {\r\n      this.$dialog({\r\n        title: '新增用户',\r\n        width: 550,\r\n        height: 650,\r\n        max: false,\r\n        content: {\r\n          handle: true,\r\n          component: UserForm,\r\n          props: { deptId: node.rawId, deptName: node.title }\r\n        },\r\n        ok: () => {\r\n            this.$emit('select', [node.key], {\r\n                node: {\r\n                    dataRef: {\r\n                        code: node.code\r\n                    }\r\n                }\r\n            })\r\n            return true\r\n        }\r\n      })\r\n      return false\r\n    } else {\r\n      console.log(`unknow menukey ${menuKey}`)\r\n      return false\r\n    }\r\n    this.$dialog({\r\n      title: title,\r\n      width: 550,\r\n      height: 400,\r\n      content: {\r\n        handle: true,\r\n        props: formData,\r\n        component: GroupForm\r\n      },\r\n      ok: (args: unknown[]) => {\r\n        const data = args[0] as Group\r\n        const key = `${data.type}_${data.id}`\r\n        const parentKey = `${formData.parentType}_${formData.parentId}`\r\n        const treeNode = {\r\n                            id: key,\r\n                            rawId: data.id,\r\n                            type: data.type,\r\n                            name: data.name,\r\n                            code: data.code\r\n                          } as TreeNode\r\n        if (node.key === key) {\r\n          // 更新节点名称\r\n          node.dataRef.title = data.name\r\n        } else if (node.key === parentKey) {\r\n          // 当前节点下新增\r\n          if (node.dataRef.children) {\r\n            node.dataRef.children.push(this.dataToTreeDataItem(treeNode))\r\n          } else {\r\n            this.onLoadData(node)\r\n          }\r\n        } else {\r\n          // 非当前节点下新增\r\n          this.loop(\r\n            this.treeData,\r\n            parentKey,\r\n            (item, index, arr) => {\r\n              item.children && item.children.push(this.dataToTreeDataItem(treeNode))\r\n            }\r\n          )\r\n        }\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 属性监听\r\n  watchExpandedKeys(value: string[], oldValue: string[]) {\r\n    console.log('expandedKeys', value, oldValue)\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return this.dataToTreeDataItem(value)\r\n    })\r\n  }\r\n\r\n  // 数据转树节点\r\n  dataToTreeDataItem(data: TreeNode) {\r\n    return {\r\n      key: data.id,\r\n      type: data.type,\r\n      title: data.name,\r\n      code: data.code,\r\n      rawId: data.rawId,\r\n      isLeaf: data.type === TreeNodeType.DEPT\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./Group.vue?vue&type=template&id=b51b229c\"\nimport script from \"./Group.vue?vue&type=script&lang=ts\"\nexport * from \"./Group.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import Page from '@/types/Page'\r\nimport Pageable from '@/types/Pageable'\r\nimport { User } from '@/types/User'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 用户请求 */\r\nexport class UserRequest extends BaseRequest {\r\n    /** 根据ID查询用户 */\r\n    find(id: number) {\r\n        return super.get<User>(`/user/get/${id}`)\r\n    }\r\n\r\n    /** 根据ID删除用户 */\r\n    delete(id: number) {\r\n        return super.get(`/user/delete/${id}`)\r\n    }\r\n\r\n    /** 添加用户 */\r\n    add(user: User) {\r\n        return super.post('/user/add', user)\r\n    }\r\n\r\n    /** 更新用户 */\r\n    update(user: User) {\r\n        return super.post('/user/update', user)\r\n    }\n\r\n    /**\r\n     * 用户置顶\r\n     * @param userId 用户ID\r\n     * @param deptId 部门ID\r\n     * @returns R<boolean>\r\n     */\r\n    top(userId: number, deptId: number) {\r\n        return super.get(`/user/top?userId=${userId}&deptId=${deptId}`)\r\n    }\r\n\r\n    /** 分页查询 */\r\n    pageList(pageable: Pageable) {\r\n        return super.post<Page<User>>('/user/page', pageable)\r\n    }\r\n}\r\nconst request = new UserRequest()\r\nexport default request\r\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    :colon=\"false\"\r\n    :model=\"user\"\r\n    :rules=\"rules\"\r\n    :label-col=\"{ span: 4 }\"\r\n    :wrapper-col=\"{ span: 18 }\"\r\n  >\r\n    <a-row type=\"flex\" :gutter=\"8\" style=\"margin: 0px\">\r\n      <a-col :span=\"4\"></a-col>\r\n      <a-col :span=\"6\">\r\n        <a-upload\r\n          name=\"file\"\r\n          :data=\"avatarData\"\r\n          list-type=\"picture-card\"\r\n          class=\"avatar-uploader\"\r\n          :show-upload-list=\"false\"\r\n          action=\"/file/upload\"\r\n          :withCredentials=\"true\"\r\n          @change=\"handleUploadChange\"\r\n          :before-upload=\"beforeUpload\"\r\n        >\r\n          <img :key=\"avatarKey\" v-if=\"user.avatar\" :src=\"avatarUrl\" alt=\"头像\" />\r\n          <div v-else>\r\n            <loading-outlined v-if=\"avatarLoading\"></loading-outlined>\r\n            <plus-outlined v-else></plus-outlined>\r\n            <div class=\"ant-upload-text\">Upload</div>\r\n          </div>\r\n        </a-upload>\r\n      </a-col>\r\n      <a-col :span=\"12\">\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"name\">\r\n          <a-input v-model:value=\"user.name\" placeholder=\"姓名\">\r\n            <template #prefix\r\n              ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"account\">\r\n          <a-input v-model:value=\"user.account\" placeholder=\"账号\">\r\n            <template #prefix\r\n              ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"password\">\r\n          <a-input\r\n            v-model:value=\"user.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n          >\r\n            <template #prefix\r\n              ><LockOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n      </a-col>\r\n    </a-row>\r\n\r\n    <a-form-item label=\"手机\" name=\"phone\">\r\n      <a-input v-model:value=\"user.phone\" placeholder=\"手机\">\r\n        <template #prefix\r\n          ><MobileOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"邮箱\" name=\"email\">\r\n      <a-input v-model:value=\"user.email\" placeholder=\"邮箱\">\r\n        <template #prefix\r\n          ><MailOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"职务\">\r\n      <a-input v-model:value=\"user.post\" placeholder=\"职务\">\r\n        <template #prefix\r\n          ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"部门\">\r\n      <a-tree-select\r\n        v-if=\"treeData.length\"\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        v-model:value=\"user.deptId\"\r\n        tree-default-expand-all\r\n        style=\"width: 100%\"\r\n        placeholder=\"请选择用户部门\"\r\n        :dropdown-style=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n      />\r\n    </a-form-item>\r\n    <a-form-item label=\"状态\">\r\n      <a-switch :checked=\"user.status == 1\" @click=\"handleUserStatus\" />\r\n    </a-form-item>\r\n    <a-form-item :wrapper-col=\"{ span: 14, offset: 4 }\">\r\n      <a-button type=\"primary\" @click=\"onSubmit\">保存</a-button>\r\n      <a-button style=\"margin-left: 10px\" @click=\"onCancel\">取消</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { PropType, ref, toRaw, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\nimport { User } from '@/types/User'\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport request from '@/request/UserRequest'\r\nimport GroupRequest from '@/request/GroupRequest'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { TreeNode } from '@/types/TreeNode'\r\n\r\ninterface FileItem {\r\n  uid: string;\r\n  name?: string;\r\n  status?: string;\r\n  response?: R<any>;\r\n  url?: string;\r\n  type?: string;\r\n  size: number;\r\n  originFileObj: any;\r\n}\r\n\r\ninterface FileInfo {\r\n  file: FileItem;\r\n  fileList: FileItem[];\r\n}\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    deptId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class UserForm extends Vue {\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 用户ID，传入参数\r\n  id!: number\r\n  // 部门ID\r\n  deptId!: number\r\n  // 用户对象数据\r\n  user: User = {\r\n    status: 1,\r\n    deptId: this.deptId\r\n  }\r\n\r\n  avatarKey = Math.random()\r\n  // 头像上传标志\r\n  avatarLoading = false\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [{ required: true, message: '请输入姓名', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    account: [{ required: true, message: '请输入账号', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    post: [{ max: 20, message: '最多输入20个字符' }],\r\n    password: [\r\n      { required: true, message: '请输入密码', trigger: 'blur' },\r\n      { min: 6, max: 15, message: '密码为6-15位字符串', trigger: 'blur' }\r\n    ],\r\n    phone: [\r\n      { pattern: /^1[0-9]{10}$/, message: '手机号码错误', trigger: 'blur' }\r\n    ],\r\n    email: [\r\n      {\r\n        pattern: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/,\r\n        message: '邮箱地址错误',\r\n        trigger: 'blur'\r\n      },\r\n      { max: 50, message: '最多输入50个字符' }\r\n    ]\r\n  }\r\n\r\n  // 用户头像地址\r\n  get avatarUrl() {\r\n    return `/file/download/thumb/${this.user.avatar}`\r\n  }\r\n\r\n  // 上传头像数据\r\n  get avatarData() {\r\n    return { objectName: this.user.avatar || '' }\r\n  }\r\n\r\n  // 头像上传前回调\r\n  beforeUpload(file: FileItem) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n  }\r\n\r\n  // 上传事件\r\n  handleUploadChange = (info: FileInfo) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.avatarLoading = true\r\n      return false\r\n    }\r\n    this.avatarLoading = false\r\n    if (info.file.status === 'done') {\r\n      if (info.file.response?.code === 0) {\r\n        this.user.avatar = info.file.response.data.objectName\r\n        this.avatarKey = Math.random()\r\n      } else {\r\n        message.error(info.file.response?.msg as string)\r\n      }\r\n    }\r\n    if (info.file.status === 'error') {\r\n      message.error('上传失败')\r\n    }\r\n  }\r\n\r\n  // 挂载后执行\r\n  async mounted() {\r\n    // 加载组织树数据\r\n    const ret = await GroupRequest.children()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toChildren(ret)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载用户信息\r\n    this.id &&\r\n      request.find(this.id).then((ret) => {\r\n        if (ret.code === 0) {\r\n          this.user = ret.data\r\n        } else {\r\n          message.error(ret.msg)\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      GroupRequest.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n        this.user.deptId = this.user.deptId || 0\r\n      })\r\n    })\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          let ret\r\n          if (!this.user.id) {\r\n            ret = await request.add(toRaw(this.user))\r\n          } else {\r\n            ret = await request.update(toRaw(this.user))\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok()\r\n          } else {\r\n            message.error(ret.msg)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<User>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 用户状态切换\r\n  handleUserStatus() {\r\n    this.user.status = this.user.status === 1 ? 0 : 1\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 2\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.ant-form {\r\n  padding: 5px 0px;\r\n}\r\n.avatar-uploader > ::v-deep(.ant-upload) {\r\n  width: 130px;\r\n  height: 180px;\r\n}\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style>\r\n","\r\nimport { PropType, ref, toRaw, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\nimport { User } from '@/types/User'\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport request from '@/request/UserRequest'\r\nimport GroupRequest from '@/request/GroupRequest'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { TreeNode } from '@/types/TreeNode'\r\n\r\ninterface FileItem {\r\n  uid: string;\r\n  name?: string;\r\n  status?: string;\r\n  response?: R<any>;\r\n  url?: string;\r\n  type?: string;\r\n  size: number;\r\n  originFileObj: any;\r\n}\r\n\r\ninterface FileInfo {\r\n  file: FileItem;\r\n  fileList: FileItem[];\r\n}\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    deptId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class UserForm extends Vue {\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 用户ID，传入参数\r\n  id!: number\r\n  // 部门ID\r\n  deptId!: number\r\n  // 用户对象数据\r\n  user: User = {\r\n    status: 1,\r\n    deptId: this.deptId\r\n  }\r\n\r\n  avatarKey = Math.random()\r\n  // 头像上传标志\r\n  avatarLoading = false\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [{ required: true, message: '请输入姓名', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    account: [{ required: true, message: '请输入账号', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    post: [{ max: 20, message: '最多输入20个字符' }],\r\n    password: [\r\n      { required: true, message: '请输入密码', trigger: 'blur' },\r\n      { min: 6, max: 15, message: '密码为6-15位字符串', trigger: 'blur' }\r\n    ],\r\n    phone: [\r\n      { pattern: /^1[0-9]{10}$/, message: '手机号码错误', trigger: 'blur' }\r\n    ],\r\n    email: [\r\n      {\r\n        pattern: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/,\r\n        message: '邮箱地址错误',\r\n        trigger: 'blur'\r\n      },\r\n      { max: 50, message: '最多输入50个字符' }\r\n    ]\r\n  }\r\n\r\n  // 用户头像地址\r\n  get avatarUrl() {\r\n    return `/file/download/thumb/${this.user.avatar}`\r\n  }\r\n\r\n  // 上传头像数据\r\n  get avatarData() {\r\n    return { objectName: this.user.avatar || '' }\r\n  }\r\n\r\n  // 头像上传前回调\r\n  beforeUpload(file: FileItem) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n  }\r\n\r\n  // 上传事件\r\n  handleUploadChange = (info: FileInfo) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.avatarLoading = true\r\n      return false\r\n    }\r\n    this.avatarLoading = false\r\n    if (info.file.status === 'done') {\r\n      if (info.file.response?.code === 0) {\r\n        this.user.avatar = info.file.response.data.objectName\r\n        this.avatarKey = Math.random()\r\n      } else {\r\n        message.error(info.file.response?.msg as string)\r\n      }\r\n    }\r\n    if (info.file.status === 'error') {\r\n      message.error('上传失败')\r\n    }\r\n  }\r\n\r\n  // 挂载后执行\r\n  async mounted() {\r\n    // 加载组织树数据\r\n    const ret = await GroupRequest.children()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toChildren(ret)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载用户信息\r\n    this.id &&\r\n      request.find(this.id).then((ret) => {\r\n        if (ret.code === 0) {\r\n          this.user = ret.data\r\n        } else {\r\n          message.error(ret.msg)\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      GroupRequest.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n        this.user.deptId = this.user.deptId || 0\r\n      })\r\n    })\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          let ret\r\n          if (!this.user.id) {\r\n            ret = await request.add(toRaw(this.user))\r\n          } else {\r\n            ret = await request.update(toRaw(this.user))\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok()\r\n          } else {\r\n            message.error(ret.msg)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<User>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 用户状态切换\r\n  handleUserStatus() {\r\n    this.user.status = this.user.status === 1 ? 0 : 1\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 2\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./UserForm.vue?vue&type=template&id=bf4e007a&scoped=true\"\nimport script from \"./UserForm.vue?vue&type=script&lang=ts\"\nexport * from \"./UserForm.vue?vue&type=script&lang=ts\"\n\nimport \"./UserForm.vue?vue&type=style&index=0&id=bf4e007a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-bf4e007a\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./UserForm.vue?vue&type=style&index=0&id=bf4e007a&scoped=true&lang=css\""],"sourceRoot":""}