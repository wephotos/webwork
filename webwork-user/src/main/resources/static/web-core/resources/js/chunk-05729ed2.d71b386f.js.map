{"version":3,"sources":["webpack:///./src/views/User.vue","webpack:///./src/views/Group.vue","webpack:///./src/request/GroupRequest.ts","webpack:///./src/views/UserForm.vue","webpack:///./src/request/UserRequest.ts","webpack:///./src/views/UserForm.vue?be01","webpack:///./src/views/UserForm.vue?5af4","webpack:///./src/views/GroupForm.vue","webpack:///./src/views/GroupForm.vue?71f2","webpack:///./src/views/GroupForm.vue?2159","webpack:///./src/views/Group.vue?0441","webpack:///./src/views/Group.vue?5ef1","webpack:///./src/views/User.vue?2474","webpack:///./src/views/User.vue?a29a","webpack:///./src/views/User.vue?eb0f","webpack:///./src/views/UserForm.vue?89da","webpack:///./node_modules/core-js/modules/es.array.splice.js"],"names":["href","style","class","onSelectGroup","rowKey","columns","data-source","users","rowClassName","pagination","handleTableChange","operation","record","length","title","onUserDel","onUserTop","onUserEdit","filterDropdown","ref","placeholder","column","value","selectedKeys","type","size","handleSearch","confirm","dataIndex","icon","handleReset","clearFilters","filterIcon","filtered","undefined","name","text","searchText","searchedColumn","fragment","i","toLowerCase","key","status","checked","onUserChange","load-data","onLoadData","tree-data","treeData","expandedKeys","draggable","onSelect","trigger","overlay","menuKey","onContextMenuClick","node","contextMenuKeys","ADD_DEPT","ADD_GROUP","UPDATE_GROUP","DELETE_GROUP","ADD_USER","UPDATE_DEPT","DELETE_DEPT","id","data","parentId","BaseRequest","request","colon","model","user","rules","label-col","wrapper-col","gutter","span","avatarData","list-type","show-upload-list","action","withCredentials","handleUploadChange","before-upload","beforeUpload","avatar","src","avatarUrl","alt","avatarLoading","prefix","account","password","label","phone","email","post","deptId","tree-default-expand-all","dropdown-style","handleUserStatus","onSubmit","onCancel","userId","pageable","formRef","required","message","max","min","pattern","info","file","response","code","objectName","reavatar","Math","random","error","msg","this","isJpgOrPng","isLt2M","children","ret","toChildren","find","then","treeNode","Promise","resolve","dataRef","rawId","formUnref","validate","add","update","dialog","_ok","catch","console","log","_close","map","isLeaf","selectable","components","UserOutlined","LockOutlined","MobileOutlined","MailOutlined","PlusOutlined","LoadingOutlined","props","Number","Object","render","__scopeId","formData","isTop","defaultValue","parentName","disabled","onSelectTreeExpand","virtual","enabled","parentType","loadGroupNodes","toAntTreeNodes","TreeNodeType","DEPT","GROUP","nodes","String","ContextMenuKeys","$emit","okType","onOk","delete","res","success","loop","item","index","arr","splice","err","$dialog","width","height","content","handle","component","deptName","ok","args","parentKey","push","dataToTreeDataItem","oldValue","callback","forEach","emits","orderMap","ascend","descend","customRender","curr","slots","onFilterDropdownVisibleChange","visible","setTimeout","searchInput","focus","sorter","total","current","pageSize","condition","pageQueryUser","pageList","result","count","pag","filters","sortField","columnKey","sortOrder","order","Array","top","orgcode","Group","SearchOutlined","$","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","len","actualStart","argumentsLength","arguments","TypeError"],"mappings":"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","file":"resources/js/chunk-05729ed2.d71b386f.js","sourcesContent":["<template>\r\n  <a-layout class=\"a-layout\">\r\n    <a-layout-sider class=\"a-layout-sider\" @contextmenu.prevent>\r\n      <Group @select=\"onSelectGroup\" />\r\n    </a-layout-sider>\r\n    <a-layout-content class=\"a-layout-content\">\r\n      <a-table\r\n        class=\"ant-table-striped\"\r\n        rowKey=\"id\"\r\n        :columns=\"columns\"\r\n        :data-source=\"users\"\r\n        :rowClassName=\"\r\n          (record, index) => (index % 2 === 1 ? 'table-striped' : null)\r\n        \"\r\n        :pagination=\"pagination\"\r\n        @change=\"handleTableChange\"\r\n      >\r\n        <!-- 操作列模板 -->\r\n        <template #operation=\"{ record }\">\r\n          <a-space>\r\n            <a-popconfirm\r\n              v-if=\"users.length\"\r\n              title=\"您确定要删除吗?\"\r\n              @confirm=\"onUserDel(record)\"\r\n            >\r\n              <a href=\"javascript:void(0);\">删除</a>\r\n            </a-popconfirm>\r\n            <a href=\"javascript:void(0);\" @click=\"onUserTop(record)\">置顶</a>\r\n            <a href=\"javascript:void(0);\" @click=\"onUserEdit(record)\">编辑</a>\r\n          </a-space>\r\n        </template>\r\n        <!-- 自定义筛选菜单 -->\r\n        <template\r\n          #filterDropdown=\"{\r\n            setSelectedKeys,\r\n            selectedKeys,\r\n            confirm,\r\n            clearFilters,\r\n            column\r\n          }\"\r\n        >\r\n          <div style=\"padding: 8px\">\r\n            <a-input\r\n              ref=\"searchInput\"\r\n              :placeholder=\"`搜索 ${column.title}`\"\r\n              :value=\"selectedKeys[0]\"\r\n              style=\"width: 188px; margin-bottom: 8px; display: block\"\r\n              @change=\"\r\n                (e) => setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n              \"\r\n              @pressEnter=\"\r\n                handleSearch(selectedKeys, confirm, column.dataIndex)\r\n              \"\r\n            />\r\n            <a-button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              style=\"width: 90px; margin-right: 8px\"\r\n              @click=\"handleSearch(selectedKeys, confirm, column.dataIndex)\"\r\n            >\r\n              <template #icon><SearchOutlined /></template>\r\n              Search\r\n            </a-button>\r\n            <a-button\r\n              size=\"small\"\r\n              style=\"width: 90px\"\r\n              @click=\"handleReset(clearFilters)\"\r\n            >\r\n              Reset\r\n            </a-button>\r\n          </div>\r\n        </template>\r\n        <template #filterIcon=\"filtered\">\r\n          <search-outlined\r\n            :style=\"{ color: filtered ? '#108ee9' : undefined }\"\r\n          />\r\n        </template>\r\n        <template #name=\"{ text, column }\">\r\n          <span v-if=\"searchText && searchedColumn === column.dataIndex\">\r\n            <template\r\n              v-for=\"(fragment, i) in text\r\n                .toString()\r\n                .split(new RegExp(`(?<=${searchText})|(?=${searchText})`, 'i'))\"\r\n            >\r\n              <mark\r\n                v-if=\"fragment.toLowerCase() === searchText.toLowerCase()\"\r\n                class=\"highlight\"\r\n                :key=\"i\"\r\n              >\r\n                {{ fragment }}\r\n              </mark>\r\n              <template v-else>{{ fragment }}</template>\r\n            </template>\r\n          </span>\r\n          <template v-else>\r\n            {{ text }}\r\n          </template>\r\n        </template>\r\n        <!-- 用户状态 -->\r\n        <template #status=\"{record}\">\r\n          <a-switch :checked=\"record.status == 1\" @click=\"onUserChange(record)\" />\r\n        </template>\r\n      </a-table>\r\n    </a-layout-content>\r\n  </a-layout>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { ref, unref } from 'vue'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { SearchOutlined } from '@ant-design/icons-vue'\r\nimport { SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { TableState, TableStateFilters } from 'ant-design-vue/es/table/interface'\r\nimport { User } from '@/types/User'\r\nimport Group from './Group.vue'\r\nimport UserForm from './UserForm.vue'\r\nimport Pageable from '@/types/Pageable'\r\nimport request from '@/request/UserRequest'\r\n// 分页数据类型\r\ntype Pagination = TableState['pagination'];\r\n// 排序映射\r\nconst orderMap: {[key: string]: string} = {\r\n  ascend: 'ASC',\r\n  descend: 'DESC'\r\n}\r\n@Options({\r\n  components: {\r\n    Group,\r\n    SearchOutlined\r\n  }\r\n})\r\nexport default class VueUser extends Vue {\r\n  // 用户列定义\r\n  columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'number',\r\n      width: 100,\r\n      customRender: (info: {\r\n        text: string;\r\n        record: User;\r\n        index: number;\r\n      }) => {\r\n        return (this.pageable.curr - 1) * this.pageable.size + info.index + 1\r\n      }\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      slots: {\r\n        filterDropdown: 'filterDropdown',\r\n        filterIcon: 'filterIcon',\r\n        customRender: 'name'\r\n      },\r\n      onFilterDropdownVisibleChange: (visible: boolean) => {\r\n        if (visible) {\r\n          setTimeout(() => {\r\n            const searchInput = unref(this.searchInput)\r\n            searchInput && searchInput.focus()\r\n          }, 0)\r\n        }\r\n      }\r\n    },\r\n    { title: '账号', dataIndex: 'account' },\r\n    { title: '手机', dataIndex: 'phone', width: 200 },\r\n    { title: '邮箱', dataIndex: 'email', width: 200 },\r\n    { title: '更新时间', dataIndex: 'updateTime', width: 200, sorter: true, key: 'update_time' },\r\n    {\r\n        title: '状态',\r\n        width: 100,\r\n        dataIndex: 'status',\r\n        slots: { customRender: 'status' }\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      width: 200,\r\n      slots: { customRender: 'operation' }\r\n    }\r\n  ]\r\n\r\n  // 表格数据\r\n  users: User[] = []\r\n\r\n  // 搜索\r\n  searchInput = ref<HTMLInputElement>()\r\n  searchText = ''\r\n  searchedColumn = ''\r\n\r\n  // 分页参数定义\r\n  pagination = {\r\n    total: 200,\r\n    current: 1,\r\n    pageSize: 10\r\n  }\r\n\r\n  // 分页条件\r\n  pageable: Pageable = {\r\n    curr: this.pagination.current,\r\n    size: this.pagination.pageSize,\r\n    condition: {}\r\n  }\r\n\r\n  mounted() {\r\n    this.pageQueryUser()\r\n  }\r\n\r\n  // 分页查询用户\r\n  async pageQueryUser() {\r\n    const result = await request.pageList(this.pageable)\r\n    if (result.code === 0) {\r\n      this.users = result.data.data\r\n      this.pagination.total = result.data.count\r\n    } else {\r\n      message.error(result.msg)\r\n    }\r\n  }\r\n\r\n  // 表格变动监听\r\n  handleTableChange(pag: Pagination, filters: TableStateFilters, sorter: {field: string; order: string; columnKey: string}) {\r\n      this.pagination.current = pag?.current || 1\r\n      this.pageable.curr = this.pagination.current\r\n      this.pageable.sortField = sorter.columnKey || ''\r\n      this.pageable.sortOrder = orderMap[sorter.order] || ''\r\n      this.pageable.condition.name = (filters.name instanceof Array ? filters.name[0] : '')\r\n      this.pageQueryUser()\r\n  }\r\n\r\n  /** 列表搜索 */\r\n  handleSearch(selectedKeys: string[], confirm: Function, dataIndex: string) {\r\n    confirm()\r\n    this.searchText = selectedKeys[0] || ''\r\n    this.searchedColumn = dataIndex\r\n  }\r\n\r\n  /** 查询条件重置 */\r\n  handleReset(clearFilters: Function) {\r\n    clearFilters()\r\n    this.searchText = ''\r\n  }\r\n\r\n  /** 删除人员 */\r\n  async onUserDel(user: User) {\r\n    const ret = await request.delete(user.id as number)\r\n    if (ret.code === 0) {\r\n      this.pageQueryUser()\r\n    } else {\r\n      message.error(`删除失败:${ret.msg}`)\r\n    }\r\n  }\r\n\r\n  // 编辑人员\r\n  onUserEdit(user: User) {\r\n    this.$dialog({\r\n      title: '用户信息',\r\n      width: 550,\r\n      height: 650,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: UserForm,\r\n        props: { id: user.id }\r\n      },\r\n      ok: () => {\r\n        this.pageQueryUser()\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 人员置顶\r\n  async onUserTop(user: User) {\r\n    const ret = await request.top(user.id as number, user.deptId as number)\r\n    if (ret.code === 0) {\r\n      this.pageQueryUser()\r\n    } else {\r\n      message.error(`置顶失败:${ret.msg}`)\r\n    }\r\n  }\r\n\r\n  userStatus(user: User) {\r\n    return user.status === 1\r\n  }\r\n\r\n  /** 改变用户状态 */\r\n  async onUserChange(user: User) {\r\n    user.status = user.status === 1 ? 0 : 1\r\n    const ret = await request.update(user)\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      user.status = user.status === 1 ? 0 : 1\r\n    }\r\n  }\r\n\r\n  // 节点选择\r\n  onSelectGroup(selectedKeys: string[], info: SelectEvent) {\r\n    console.log(selectedKeys, info)\r\n    this.pageable.condition.orgcode = info.node.dataRef.code\r\n    this.pageQueryUser()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.a-layout {\r\n  height: 100%;\r\n}\r\n.a-layout-sider {\r\n  width: 250px;\r\n  overflow: auto;\r\n  background-color: #fff;\r\n}\r\n.a-layout-content {\r\n  padding: 5px 2px;\r\n  overflow: auto;\r\n}\r\n.highlight {\r\n  background-color: rgb(255, 192, 105);\r\n  padding: 0px;\r\n}\r\n</style>\r\n","<template >\r\n  <a-tree\r\n    :load-data=\"onLoadData\"\r\n    :tree-data=\"treeData\"\r\n    v-model:expandedKeys=\"expandedKeys\"\r\n    draggable\r\n    @select=\"onSelect\"\r\n    style=\"height: 100%\"\r\n    @contextmenu.prevent\r\n  >\r\n    <template #title=\"node\">\r\n      <a-dropdown :trigger=\"['contextmenu']\">\r\n        <span @contextmenu.prevent>{{ node.title }}</span>\r\n        <template #overlay>\r\n          <a-menu\r\n            @click=\"({key: menuKey}) => onContextMenuClick(node, menuKey)\"\r\n          >\r\n            <!-- 单位菜单 -->\r\n            <template v-if=\"node.type == 0 || node.type == 1\">\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_DEPT\"\r\n                >新增部门</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_GROUP\"\r\n                >新增单位</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.UPDATE_GROUP\"\r\n                >更新单位</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.DELETE_GROUP\">\r\n                删除单位\r\n              </a-menu-item>\r\n            </template>\r\n            <!-- 部门菜单 -->\r\n            <template v-if=\"node.type == 2\">\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_USER\"\r\n                >新增人员</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.UPDATE_DEPT\"\r\n                >更新部门</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.DELETE_DEPT\"\r\n                >删除部门</a-menu-item\r\n              >\r\n            </template>\r\n          </a-menu>\r\n        </template>\r\n      </a-dropdown>\r\n    </template>\r\n  </a-tree>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message, Modal } from 'ant-design-vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { R } from '@/types/R'\r\nimport { Group } from '@/types/Group'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport UserForm from './UserForm.vue'\r\nimport GroupForm from './GroupForm.vue'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n// 右键菜单键\r\nenum ContextMenuKeys {\r\n  // 新增人员\r\n  ADD_USER,\r\n  // 添加部门\r\n  ADD_DEPT,\r\n  // 添加单位\r\n  ADD_GROUP,\r\n  // 更新部门\r\n  UPDATE_DEPT,\r\n  // 更新单位\r\n  UPDATE_GROUP,\r\n  // 删除部门\r\n  DELETE_DEPT,\r\n  // 删除单位\r\n  DELETE_GROUP\r\n}\r\n\r\n/**\r\n * 组织机构管理\r\n */\r\n@Options({\r\n  emits: ['select']\r\n})\r\nexport default class GroupVue extends Vue {\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 展开的KEY\r\n  expandedKeys: string[] = []\r\n  // 右键菜单枚举\r\n  contextMenuKeys = ContextMenuKeys\r\n  // 节点类型枚举\r\n  // treeNodeType = TreeNodeType\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.children()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toChildren(ret)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    this.$emit('select', selectedKeys, info)\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}, menuKey: ContextMenuKeys) {\r\n    let title\r\n    let formData: {\r\n      id?: number; // rawId\r\n      type: number; // enum NodeType\r\n      parentId?: number; // 父节点ID\r\n      parentType?: number; // 父节点类型\r\n      parentName?: string; // 父节点名称\r\n    }\r\n    if (ContextMenuKeys.ADD_DEPT === menuKey) {\r\n      title = '新增部门'\r\n      formData = {\r\n        type: TreeNodeType.DEPT,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.ADD_GROUP === menuKey) {\r\n      title = '新增单位'\r\n      formData = {\r\n        type: TreeNodeType.GROUP,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_DEPT === menuKey) {\r\n      title = '更新部门'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.DEPT\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_GROUP === menuKey) {\r\n      title = '更新单位'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.GROUP\r\n      }\r\n    } else if (\r\n      ContextMenuKeys.DELETE_DEPT === menuKey ||\r\n      ContextMenuKeys.DELETE_GROUP === menuKey\r\n    ) {\r\n      Modal.confirm({\r\n        title: `您确定要删除<${node.title}>吗?`,\r\n        okType: 'danger',\r\n        onOk: () => {\r\n          request\r\n            .delete(node.rawId)\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                message.success('删除成功')\r\n                this.loop(\r\n                  this.treeData,\r\n                  node.key as string,\r\n                  (item, index, arr) => {\r\n                    arr.splice(index, 1)\r\n                  }\r\n                )\r\n              } else {\r\n                message.error('删除失败:' + res.msg)\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              message.error(err.message)\r\n            })\r\n        }\r\n      })\r\n\r\n      return false\r\n    } else if (ContextMenuKeys.ADD_USER === menuKey) {\r\n      this.$dialog({\r\n        title: '新增用户',\r\n        width: 550,\r\n        height: 650,\r\n        max: false,\r\n        content: {\r\n          handle: true,\r\n          component: UserForm,\r\n          props: { deptId: node.rawId, deptName: node.title }\r\n        },\r\n        ok: () => {\r\n            this.$emit('select', [node.key], {\r\n                node: {\r\n                    dataRef: {\r\n                        code: node.code\r\n                    }\r\n                }\r\n            })\r\n            return true\r\n        }\r\n      })\r\n      return false\r\n    } else {\r\n      console.log(`unknow menukey ${menuKey}`)\r\n      return false\r\n    }\r\n    this.$dialog({\r\n      title: title,\r\n      width: 550,\r\n      height: 400,\r\n      content: {\r\n        handle: true,\r\n        props: formData,\r\n        component: GroupForm\r\n      },\r\n      ok: (args: unknown[]) => {\r\n        const data = args[0] as Group\r\n        const key = `${data.type}_${data.id}`\r\n        const parentKey = `${formData.parentType}_${formData.parentId}`\r\n        const treeNode = {\r\n                            id: key,\r\n                            rawId: data.id,\r\n                            type: data.type,\r\n                            name: data.name,\r\n                            code: data.code\r\n                          } as TreeNode\r\n        if (node.key === key) {\r\n          // 更新节点名称\r\n          node.dataRef.title = data.name\r\n        } else if (node.key === parentKey) {\r\n          // 当前节点下新增\r\n          if (node.dataRef.children) {\r\n            node.dataRef.children.push(this.dataToTreeDataItem(treeNode))\r\n          } else {\r\n            this.onLoadData(node)\r\n          }\r\n        } else {\r\n          // 非当前节点下新增\r\n          this.loop(\r\n            this.treeData,\r\n            parentKey,\r\n            (item, index, arr) => {\r\n              item.children && item.children.push(this.dataToTreeDataItem(treeNode))\r\n            }\r\n          )\r\n        }\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 属性监听\r\n  watchExpandedKeys(value: string[], oldValue: string[]) {\r\n    console.log('expandedKeys', value, oldValue)\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return this.dataToTreeDataItem(value)\r\n    })\r\n  }\r\n\r\n  // 数据转树节点\r\n  dataToTreeDataItem(data: TreeNode) {\r\n    return {\r\n      key: data.id,\r\n      type: data.type,\r\n      title: data.name,\r\n      code: data.code,\r\n      rawId: data.rawId,\r\n      isLeaf: data.type === TreeNodeType.DEPT\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n","import { Group } from '@/types/Group'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 组织机构接口请求 */\r\nexport class GroupRequest extends BaseRequest {\r\n    /** 根据ID查询组织 */\r\n    find(id: number) {\r\n        return super.get<Group>(`/organization/get/${id}`)\r\n    }\r\n\r\n    /** 根据ID删除组织 */\r\n    delete(id: number) {\r\n        return super.get(`/organization/delete/${id}`)\r\n    }\r\n\r\n    /** 添加组织机构 */\r\n    add(data: Group) {\r\n        return super.post('/organization/add', data)\r\n    }\r\n\r\n    /** 更新组织机构 */\r\n    update(data: Group) {\r\n        return super.post('/organization/update', data)\r\n    }\r\n\r\n    /** 加载当前用户的单位树数据 */\r\n    loadGroupNodes() {\r\n        return super.get<TreeNode[]>('/organization/load-nodes')\r\n    }\n\r\n    /** 查询组织机构子节点  */\r\n    children(parentId?: number) {\r\n        return super.get<TreeNode[]>('/organization/children' + (parentId ? `?parentId=${parentId}` : ''))\r\n    }\r\n}\r\n\r\nconst request = new GroupRequest()\r\nexport default request\r\n","<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    :colon=\"false\"\r\n    :model=\"user\"\r\n    :rules=\"rules\"\r\n    :label-col=\"{ span: 4 }\"\r\n    :wrapper-col=\"{ span: 18 }\"\r\n  >\r\n    <a-row type=\"flex\" :gutter=\"8\" style=\"margin: 0px\">\r\n      <a-col :span=\"4\"></a-col>\r\n      <a-col :span=\"6\">\r\n        <a-upload\r\n          name=\"file\"\r\n          :data=\"avatarData\"\r\n          list-type=\"picture-card\"\r\n          class=\"avatar-uploader\"\r\n          :show-upload-list=\"false\"\r\n          action=\"/file/upload\"\r\n          :withCredentials=\"true\"\r\n          @change=\"handleUploadChange\"\r\n          :before-upload=\"beforeUpload\"\r\n        >\r\n          <img v-if=\"user.avatar\" :src=\"avatarUrl\" alt=\"头像\" />\r\n          <div v-else>\r\n            <loading-outlined v-if=\"avatarLoading\"></loading-outlined>\r\n            <plus-outlined v-else></plus-outlined>\r\n            <div class=\"ant-upload-text\">Upload</div>\r\n          </div>\r\n        </a-upload>\r\n      </a-col>\r\n      <a-col :span=\"12\">\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"name\">\r\n          <a-input v-model:value=\"user.name\" placeholder=\"姓名\">\r\n            <template #prefix\r\n              ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"account\">\r\n          <a-input v-model:value=\"user.account\" placeholder=\"账号\">\r\n            <template #prefix\r\n              ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"password\">\r\n          <a-input\r\n            v-model:value=\"user.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n          >\r\n            <template #prefix\r\n              ><LockOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n      </a-col>\r\n    </a-row>\r\n\r\n    <a-form-item label=\"手机\" name=\"phone\">\r\n      <a-input v-model:value=\"user.phone\" placeholder=\"手机\">\r\n        <template #prefix\r\n          ><MobileOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"邮箱\" name=\"email\">\r\n      <a-input v-model:value=\"user.email\" placeholder=\"邮箱\">\r\n        <template #prefix\r\n          ><MailOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"职务\">\r\n      <a-input v-model:value=\"user.post\" placeholder=\"职务\">\r\n        <template #prefix\r\n          ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"部门\">\r\n      <a-tree-select\r\n        v-if=\"treeData.length\"\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        v-model:value=\"user.deptId\"\r\n        tree-default-expand-all\r\n        style=\"width: 100%\"\r\n        placeholder=\"请选择用户部门\"\r\n        :dropdown-style=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n      />\r\n    </a-form-item>\r\n    <a-form-item label=\"状态\">\r\n      <a-switch :checked=\"user.status == 1\" @click=\"handleUserStatus\" />\r\n    </a-form-item>\r\n    <a-form-item :wrapper-col=\"{ span: 14, offset: 4 }\">\r\n      <a-button type=\"primary\" @click=\"onSubmit\">保存</a-button>\r\n      <a-button style=\"margin-left: 10px\" @click=\"onCancel\">取消</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { PropType, ref, toRaw, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\nimport { User } from '@/types/User'\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport request from '@/request/UserRequest'\r\nimport GroupRequest from '@/request/GroupRequest'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { R } from '@/types/R'\r\nimport { TreeNode } from '@/types/TreeNode'\r\n\r\ninterface FileItem {\r\n  uid: string;\r\n  name?: string;\r\n  status?: string;\r\n  response?: R<any>;\r\n  url?: string;\r\n  type?: string;\r\n  size: number;\r\n  originFileObj: any;\r\n}\r\n\r\ninterface FileInfo {\r\n  file: FileItem;\r\n  fileList: FileItem[];\r\n}\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    deptId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class UserForm extends Vue {\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 用户ID，传入参数\r\n  id!: number\r\n  // 部门ID\r\n  deptId!: number\r\n  // 用户对象数据\r\n  user: User = {\r\n    status: 1,\r\n    deptId: this.deptId\r\n  }\r\n\r\n  // 头像上传标志\r\n  avatarLoading = false\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [{ required: true, message: '请输入姓名', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    account: [{ required: true, message: '请输入账号', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    post: [{ max: 20, message: '最多输入20个字符' }],\r\n    password: [\r\n      { required: true, message: '请输入密码', trigger: 'blur' },\r\n      { min: 6, max: 15, message: '密码为6-15位字符串', trigger: 'blur' }\r\n    ],\r\n    phone: [\r\n      { pattern: /^1[0-9]{10}$/, message: '手机号码错误', trigger: 'blur' }\r\n    ],\r\n    email: [\r\n      {\r\n        pattern: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/,\r\n        message: '邮箱地址错误',\r\n        trigger: 'blur'\r\n      },\r\n      { max: 50, message: '最多输入50个字符' }\r\n    ]\r\n  }\r\n\r\n  // 用户头像地址\r\n  get avatarUrl() {\r\n    // 更换头像\r\n    if (this.user.reavatar) {\r\n      return `/file/download/thumb/${this.user.reavatar}`\r\n    } else {\r\n      return `/file/download/thumb/${this.user.avatar}`\r\n    }\r\n  }\r\n\r\n  // 上传头像数据\r\n  get avatarData() {\r\n    return { objectName: this.user.avatar || '' }\r\n  }\r\n\r\n  // 头像上传前回调\r\n  beforeUpload(file: FileItem) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n  }\r\n\r\n  // 上传事件\r\n  handleUploadChange = (info: FileInfo) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.avatarLoading = true\r\n      return false\r\n    }\r\n    this.avatarLoading = false\r\n    if (info.file.status === 'done') {\r\n      if (info.file.response?.code === 0) {\r\n        this.user.avatar = info.file.response.data.objectName\r\n        this.user.reavatar = this.user.avatar + '?random=' + Math.random()\r\n      } else {\r\n        message.error(info.file.response?.msg as string)\r\n      }\r\n    }\r\n    if (info.file.status === 'error') {\r\n      message.error('上传失败')\r\n    }\r\n  }\r\n\r\n  // 挂载后执行\r\n  async mounted() {\r\n    // 加载组织树数据\r\n    const ret = await GroupRequest.children()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toChildren(ret)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载用户信息\r\n    this.id &&\r\n      request.find(this.id).then((ret) => {\r\n        if (ret.code === 0) {\r\n          this.user = ret.data\r\n        } else {\r\n          message.error(ret.msg)\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      GroupRequest.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n        this.user.deptId = this.user.deptId || 0\r\n      })\r\n    })\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          let ret\r\n          if (!this.user.id) {\r\n            ret = await request.add(toRaw(this.user))\r\n          } else {\r\n            ret = await request.update(toRaw(this.user))\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok()\r\n          } else {\r\n            message.error(ret.msg)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<User>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 用户状态切换\r\n  handleUserStatus() {\r\n    this.user.status = this.user.status === 1 ? 0 : 1\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 2\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.ant-form {\r\n  padding: 5px 0px;\r\n}\r\n.avatar-uploader > ::v-deep(.ant-upload) {\r\n  width: 130px;\r\n  height: 180px;\r\n}\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style>\r\n","import Page from '@/types/Page'\r\nimport Pageable from '@/types/Pageable'\r\nimport { User } from '@/types/User'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 用户请求 */\r\nexport class UserRequest extends BaseRequest {\r\n    /** 根据ID查询用户 */\r\n    find(id: number) {\r\n        return super.get<User>(`/user/get/${id}`)\r\n    }\r\n\r\n    /** 根据ID删除用户 */\r\n    delete(id: number) {\r\n        return super.get(`/user/delete/${id}`)\r\n    }\r\n\r\n    /** 添加用户 */\r\n    add(user: User) {\r\n        return super.post('/user/add', user)\r\n    }\r\n\r\n    /** 更新用户 */\r\n    update(user: User) {\r\n        return super.post('/user/update', user)\r\n    }\n\r\n    /**\r\n     * 用户置顶\r\n     * @param userId 用户ID\r\n     * @param deptId 部门ID\r\n     * @returns R<boolean>\r\n     */\r\n    top(userId: number, deptId: number) {\r\n        return super.get(`/user/top?userId=${userId}&deptId=${deptId}`)\r\n    }\r\n\r\n    /** 分页查询 */\r\n    pageList(pageable: Pageable) {\r\n        return super.post<Page<User>>('/user/page', pageable)\r\n    }\r\n}\r\nconst request = new UserRequest()\r\nexport default request\r\n","\r\nimport { PropType, ref, toRaw, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\nimport { User } from '@/types/User'\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport request from '@/request/UserRequest'\r\nimport GroupRequest from '@/request/GroupRequest'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { R } from '@/types/R'\r\nimport { TreeNode } from '@/types/TreeNode'\r\n\r\ninterface FileItem {\r\n  uid: string;\r\n  name?: string;\r\n  status?: string;\r\n  response?: R<any>;\r\n  url?: string;\r\n  type?: string;\r\n  size: number;\r\n  originFileObj: any;\r\n}\r\n\r\ninterface FileInfo {\r\n  file: FileItem;\r\n  fileList: FileItem[];\r\n}\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    deptId: {\r\n      type: Number\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class UserForm extends Vue {\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 用户ID，传入参数\r\n  id!: number\r\n  // 部门ID\r\n  deptId!: number\r\n  // 用户对象数据\r\n  user: User = {\r\n    status: 1,\r\n    deptId: this.deptId\r\n  }\r\n\r\n  // 头像上传标志\r\n  avatarLoading = false\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [{ required: true, message: '请输入姓名', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    account: [{ required: true, message: '请输入账号', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    post: [{ max: 20, message: '最多输入20个字符' }],\r\n    password: [\r\n      { required: true, message: '请输入密码', trigger: 'blur' },\r\n      { min: 6, max: 15, message: '密码为6-15位字符串', trigger: 'blur' }\r\n    ],\r\n    phone: [\r\n      { pattern: /^1[0-9]{10}$/, message: '手机号码错误', trigger: 'blur' }\r\n    ],\r\n    email: [\r\n      {\r\n        pattern: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/,\r\n        message: '邮箱地址错误',\r\n        trigger: 'blur'\r\n      },\r\n      { max: 50, message: '最多输入50个字符' }\r\n    ]\r\n  }\r\n\r\n  // 用户头像地址\r\n  get avatarUrl() {\r\n    // 更换头像\r\n    if (this.user.reavatar) {\r\n      return `/file/download/thumb/${this.user.reavatar}`\r\n    } else {\r\n      return `/file/download/thumb/${this.user.avatar}`\r\n    }\r\n  }\r\n\r\n  // 上传头像数据\r\n  get avatarData() {\r\n    return { objectName: this.user.avatar || '' }\r\n  }\r\n\r\n  // 头像上传前回调\r\n  beforeUpload(file: FileItem) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n  }\r\n\r\n  // 上传事件\r\n  handleUploadChange = (info: FileInfo) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.avatarLoading = true\r\n      return false\r\n    }\r\n    this.avatarLoading = false\r\n    if (info.file.status === 'done') {\r\n      if (info.file.response?.code === 0) {\r\n        this.user.avatar = info.file.response.data.objectName\r\n        this.user.reavatar = this.user.avatar + '?random=' + Math.random()\r\n      } else {\r\n        message.error(info.file.response?.msg as string)\r\n      }\r\n    }\r\n    if (info.file.status === 'error') {\r\n      message.error('上传失败')\r\n    }\r\n  }\r\n\r\n  // 挂载后执行\r\n  async mounted() {\r\n    // 加载组织树数据\r\n    const ret = await GroupRequest.children()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toChildren(ret)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载用户信息\r\n    this.id &&\r\n      request.find(this.id).then((ret) => {\r\n        if (ret.code === 0) {\r\n          this.user = ret.data\r\n        } else {\r\n          message.error(ret.msg)\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      GroupRequest.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n        this.user.deptId = this.user.deptId || 0\r\n      })\r\n    })\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          let ret\r\n          if (!this.user.id) {\r\n            ret = await request.add(toRaw(this.user))\r\n          } else {\r\n            ret = await request.update(toRaw(this.user))\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok()\r\n          } else {\r\n            message.error(ret.msg)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<User>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 用户状态切换\r\n  handleUserStatus() {\r\n    this.user.status = this.user.status === 1 ? 0 : 1\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 2\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./UserForm.vue?vue&type=template&id=e3f829f8&scoped=true\"\nimport script from \"./UserForm.vue?vue&type=script&lang=ts\"\nexport * from \"./UserForm.vue?vue&type=script&lang=ts\"\n\nimport \"./UserForm.vue?vue&type=style&index=0&id=e3f829f8&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-e3f829f8\"\n\nexport default script","<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    :model=\"formData\"\r\n    :rules=\"rules\"\r\n    :label-col=\"{ span: 4 }\"\r\n    :wrapper-col=\"{ span: 18 }\"\r\n    style=\"margin-top: 15px\"\r\n  >\r\n    <a-form-item label=\"节点名称\" name=\"name\">\r\n      <a-input v-model:value=\"formData.name\" />\r\n    </a-form-item>\r\n    <a-form-item\r\n      v-if=\"!isTop\"\r\n      label=\"上级单位\"\r\n      name=\"parentId\"\r\n    >\r\n      <a-tree-select\r\n        v-model:value=\"formData.parentId\"\r\n        :defaultValue=\"formData.parentName\"\r\n        :disabled=\"!!id\"\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        @treeExpand=\"onSelectTreeExpand\"\r\n        tree-default-expand-all\r\n        style=\"width: 100%\"\r\n        placeholder=\"请选择上级单位\"\r\n        :dropdown-style=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n      />\r\n    </a-form-item>\r\n    <a-form-item v-if=\"!isTop && type == 1\" label=\"虚拟节点\" name=\"virtual\">\r\n      <a-radio-group v-model:value=\"formData.virtual\">\r\n        <a-radio :value=\"true\">是</a-radio>\r\n        <a-radio :value=\"false\">否</a-radio>\r\n      </a-radio-group>\r\n    </a-form-item>\r\n    <a-form-item v-if=\"!isTop\" label=\"节点状态\" name=\"enabled\">\r\n      <a-switch v-model:checked=\"formData.enabled\" />\r\n    </a-form-item>\r\n    <a-form-item :wrapper-col=\"{ span: 14, offset: 4 }\">\r\n      <a-button type=\"primary\" @click=\"onSubmit\">提交</a-button>\r\n      <a-button style=\"margin-left: 10px\" @click=\"onCancel\">取消</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n/**\r\n * 组织机构表单\r\n */\r\n@Options({\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    type: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    parentType: {\r\n      type: Number\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class GroupForm extends Vue {\r\n  // 节点ID\r\n  id!: number\r\n  // 节点类型\r\n  type!: number\r\n  // 父级节点\r\n  parentId!: number\r\n  parentType!: number\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单数据\r\n  formData: Group & {\r\n    enabled?: boolean;\r\n    virtual?: boolean;\r\n    parentName?: string;\r\n  } = {\r\n    id: this.id,\r\n    enabled: true, // 默认启用\r\n    virtual: false, // 默认非虚拟节点\r\n    parentId: this.parentId,\r\n    parentType: this.parentType,\r\n    parentName: this.parentName\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入名称', trigger: 'blur' },\r\n      { max: 50, message: '名称最多50个字符' }\r\n    ],\r\n    parentId: [{ required: true, message: '请选择上级单位', trigger: 'blur', type: 'number' }]\r\n  }\r\n\r\n  // 是否顶级单位\r\n  get isTop() {\r\n    return !(this.parentId || this.formData.parentId)\r\n  }\r\n\r\n  // 加载数据\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.loadGroupNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toAntTreeNodes(ret.data)\r\n\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code !== 0) {\r\n        message.error(ret.msg)\r\n        return false\r\n      }\r\n      this.formData = {\r\n        ...this.formData,\r\n        ...ret.data\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  onSelectTreeExpand(expandedKeys: string[]) {\r\n    console.log(expandedKeys)\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          data.type = data.virtual ? 0 : this.type\r\n          data.status = data.enabled ? 1 : 0\r\n          delete data.virtual\r\n          delete data.enabled\r\n\r\n          let ret\r\n          if (!this.id) {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          } else {\r\n            ret = await request.update(data)\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok(data)\r\n          } else {\r\n            message.error(`错误:${ret.msg}`)\r\n          }\r\n        }).catch((error: ValidateErrorEntity<Group>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type,\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: value.type === TreeNodeType.GROUP\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 转换为 Ant树节点\r\n  toAntTreeNodes(nodes: TreeNode[]): TreeDataItem[] {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        rawId: node.rawId,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: node.id,\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: node.type === TreeNodeType.GROUP,\r\n        children: this.toAntTreeNodes(node.children)\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n</script>\r\n","\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n/**\r\n * 组织机构表单\r\n */\r\n@Options({\r\n  props: {\r\n    id: {\r\n      type: Number\r\n    },\r\n    type: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: Number\r\n    },\r\n    parentType: {\r\n      type: Number\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class GroupForm extends Vue {\r\n  // 节点ID\r\n  id!: number\r\n  // 节点类型\r\n  type!: number\r\n  // 父级节点\r\n  parentId!: number\r\n  parentType!: number\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单数据\r\n  formData: Group & {\r\n    enabled?: boolean;\r\n    virtual?: boolean;\r\n    parentName?: string;\r\n  } = {\r\n    id: this.id,\r\n    enabled: true, // 默认启用\r\n    virtual: false, // 默认非虚拟节点\r\n    parentId: this.parentId,\r\n    parentType: this.parentType,\r\n    parentName: this.parentName\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入名称', trigger: 'blur' },\r\n      { max: 50, message: '名称最多50个字符' }\r\n    ],\r\n    parentId: [{ required: true, message: '请选择上级单位', trigger: 'blur', type: 'number' }]\r\n  }\r\n\r\n  // 是否顶级单位\r\n  get isTop() {\r\n    return !(this.parentId || this.formData.parentId)\r\n  }\r\n\r\n  // 加载数据\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.loadGroupNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toAntTreeNodes(ret.data)\r\n\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code !== 0) {\r\n        message.error(ret.msg)\r\n        return false\r\n      }\r\n      this.formData = {\r\n        ...this.formData,\r\n        ...ret.data\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  onSelectTreeExpand(expandedKeys: string[]) {\r\n    console.log(expandedKeys)\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          data.type = data.virtual ? 0 : this.type\r\n          data.status = data.enabled ? 1 : 0\r\n          delete data.virtual\r\n          delete data.enabled\r\n\r\n          let ret\r\n          if (!this.id) {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          } else {\r\n            ret = await request.update(data)\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok(data)\r\n          } else {\r\n            message.error(`错误:${ret.msg}`)\r\n          }\r\n        }).catch((error: ValidateErrorEntity<Group>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        rawId: value.rawId,\r\n        type: value.type,\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: value.type === TreeNodeType.GROUP\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 转换为 Ant树节点\r\n  toAntTreeNodes(nodes: TreeNode[]): TreeDataItem[] {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        rawId: node.rawId,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: node.id,\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === TreeNodeType.DEPT,\r\n        // disabled: value.type === TreeNodeType.DEPT\r\n        selectable: node.type === TreeNodeType.GROUP,\r\n        children: this.toAntTreeNodes(node.children)\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./GroupForm.vue?vue&type=template&id=f1104cf2\"\nimport script from \"./GroupForm.vue?vue&type=script&lang=ts\"\nexport * from \"./GroupForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message, Modal } from 'ant-design-vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { R } from '@/types/R'\r\nimport { Group } from '@/types/Group'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport UserForm from './UserForm.vue'\r\nimport GroupForm from './GroupForm.vue'\r\nimport { TreeNodeType } from '@/types/TreeNodeType'\r\n// 右键菜单键\r\nenum ContextMenuKeys {\r\n  // 新增人员\r\n  ADD_USER,\r\n  // 添加部门\r\n  ADD_DEPT,\r\n  // 添加单位\r\n  ADD_GROUP,\r\n  // 更新部门\r\n  UPDATE_DEPT,\r\n  // 更新单位\r\n  UPDATE_GROUP,\r\n  // 删除部门\r\n  DELETE_DEPT,\r\n  // 删除单位\r\n  DELETE_GROUP\r\n}\r\n\r\n/**\r\n * 组织机构管理\r\n */\r\n@Options({\r\n  emits: ['select']\r\n})\r\nexport default class GroupVue extends Vue {\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 展开的KEY\r\n  expandedKeys: string[] = []\r\n  // 右键菜单枚举\r\n  contextMenuKeys = ContextMenuKeys\r\n  // 节点类型枚举\r\n  // treeNodeType = TreeNodeType\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.children()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toChildren(ret)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.rawId as number).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    this.$emit('select', selectedKeys, info)\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}, menuKey: ContextMenuKeys) {\r\n    let title\r\n    let formData: {\r\n      id?: number; // rawId\r\n      type: number; // enum NodeType\r\n      parentId?: number; // 父节点ID\r\n      parentType?: number; // 父节点类型\r\n      parentName?: string; // 父节点名称\r\n    }\r\n    if (ContextMenuKeys.ADD_DEPT === menuKey) {\r\n      title = '新增部门'\r\n      formData = {\r\n        type: TreeNodeType.DEPT,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.ADD_GROUP === menuKey) {\r\n      title = '新增单位'\r\n      formData = {\r\n        type: TreeNodeType.GROUP,\r\n        parentId: node.rawId,\r\n        parentType: node.type,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_DEPT === menuKey) {\r\n      title = '更新部门'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.DEPT\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_GROUP === menuKey) {\r\n      title = '更新单位'\r\n      formData = {\r\n        id: node.rawId,\r\n        type: TreeNodeType.GROUP\r\n      }\r\n    } else if (\r\n      ContextMenuKeys.DELETE_DEPT === menuKey ||\r\n      ContextMenuKeys.DELETE_GROUP === menuKey\r\n    ) {\r\n      Modal.confirm({\r\n        title: `您确定要删除<${node.title}>吗?`,\r\n        okType: 'danger',\r\n        onOk: () => {\r\n          request\r\n            .delete(node.rawId)\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                message.success('删除成功')\r\n                this.loop(\r\n                  this.treeData,\r\n                  node.key as string,\r\n                  (item, index, arr) => {\r\n                    arr.splice(index, 1)\r\n                  }\r\n                )\r\n              } else {\r\n                message.error('删除失败:' + res.msg)\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              message.error(err.message)\r\n            })\r\n        }\r\n      })\r\n\r\n      return false\r\n    } else if (ContextMenuKeys.ADD_USER === menuKey) {\r\n      this.$dialog({\r\n        title: '新增用户',\r\n        width: 550,\r\n        height: 650,\r\n        max: false,\r\n        content: {\r\n          handle: true,\r\n          component: UserForm,\r\n          props: { deptId: node.rawId, deptName: node.title }\r\n        },\r\n        ok: () => {\r\n            this.$emit('select', [node.key], {\r\n                node: {\r\n                    dataRef: {\r\n                        code: node.code\r\n                    }\r\n                }\r\n            })\r\n            return true\r\n        }\r\n      })\r\n      return false\r\n    } else {\r\n      console.log(`unknow menukey ${menuKey}`)\r\n      return false\r\n    }\r\n    this.$dialog({\r\n      title: title,\r\n      width: 550,\r\n      height: 400,\r\n      content: {\r\n        handle: true,\r\n        props: formData,\r\n        component: GroupForm\r\n      },\r\n      ok: (args: unknown[]) => {\r\n        const data = args[0] as Group\r\n        const key = `${data.type}_${data.id}`\r\n        const parentKey = `${formData.parentType}_${formData.parentId}`\r\n        const treeNode = {\r\n                            id: key,\r\n                            rawId: data.id,\r\n                            type: data.type,\r\n                            name: data.name,\r\n                            code: data.code\r\n                          } as TreeNode\r\n        if (node.key === key) {\r\n          // 更新节点名称\r\n          node.dataRef.title = data.name\r\n        } else if (node.key === parentKey) {\r\n          // 当前节点下新增\r\n          if (node.dataRef.children) {\r\n            node.dataRef.children.push(this.dataToTreeDataItem(treeNode))\r\n          } else {\r\n            this.onLoadData(node)\r\n          }\r\n        } else {\r\n          // 非当前节点下新增\r\n          this.loop(\r\n            this.treeData,\r\n            parentKey,\r\n            (item, index, arr) => {\r\n              item.children && item.children.push(this.dataToTreeDataItem(treeNode))\r\n            }\r\n          )\r\n        }\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 属性监听\r\n  watchExpandedKeys(value: string[], oldValue: string[]) {\r\n    console.log('expandedKeys', value, oldValue)\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<TreeNode[]>) {\r\n    return ret.data.map((value) => {\r\n      return this.dataToTreeDataItem(value)\r\n    })\r\n  }\r\n\r\n  // 数据转树节点\r\n  dataToTreeDataItem(data: TreeNode) {\r\n    return {\r\n      key: data.id,\r\n      type: data.type,\r\n      title: data.name,\r\n      code: data.code,\r\n      rawId: data.rawId,\r\n      isLeaf: data.type === TreeNodeType.DEPT\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./Group.vue?vue&type=template&id=b51b229c\"\nimport script from \"./Group.vue?vue&type=script&lang=ts\"\nexport * from \"./Group.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { ref, unref } from 'vue'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { SearchOutlined } from '@ant-design/icons-vue'\r\nimport { SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { TableState, TableStateFilters } from 'ant-design-vue/es/table/interface'\r\nimport { User } from '@/types/User'\r\nimport Group from './Group.vue'\r\nimport UserForm from './UserForm.vue'\r\nimport Pageable from '@/types/Pageable'\r\nimport request from '@/request/UserRequest'\r\n// 分页数据类型\r\ntype Pagination = TableState['pagination'];\r\n// 排序映射\r\nconst orderMap: {[key: string]: string} = {\r\n  ascend: 'ASC',\r\n  descend: 'DESC'\r\n}\r\n@Options({\r\n  components: {\r\n    Group,\r\n    SearchOutlined\r\n  }\r\n})\r\nexport default class VueUser extends Vue {\r\n  // 用户列定义\r\n  columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'number',\r\n      width: 100,\r\n      customRender: (info: {\r\n        text: string;\r\n        record: User;\r\n        index: number;\r\n      }) => {\r\n        return (this.pageable.curr - 1) * this.pageable.size + info.index + 1\r\n      }\r\n    },\r\n    {\r\n      title: '姓名',\r\n      dataIndex: 'name',\r\n      slots: {\r\n        filterDropdown: 'filterDropdown',\r\n        filterIcon: 'filterIcon',\r\n        customRender: 'name'\r\n      },\r\n      onFilterDropdownVisibleChange: (visible: boolean) => {\r\n        if (visible) {\r\n          setTimeout(() => {\r\n            const searchInput = unref(this.searchInput)\r\n            searchInput && searchInput.focus()\r\n          }, 0)\r\n        }\r\n      }\r\n    },\r\n    { title: '账号', dataIndex: 'account' },\r\n    { title: '手机', dataIndex: 'phone', width: 200 },\r\n    { title: '邮箱', dataIndex: 'email', width: 200 },\r\n    { title: '更新时间', dataIndex: 'updateTime', width: 200, sorter: true, key: 'update_time' },\r\n    {\r\n        title: '状态',\r\n        width: 100,\r\n        dataIndex: 'status',\r\n        slots: { customRender: 'status' }\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      width: 200,\r\n      slots: { customRender: 'operation' }\r\n    }\r\n  ]\r\n\r\n  // 表格数据\r\n  users: User[] = []\r\n\r\n  // 搜索\r\n  searchInput = ref<HTMLInputElement>()\r\n  searchText = ''\r\n  searchedColumn = ''\r\n\r\n  // 分页参数定义\r\n  pagination = {\r\n    total: 200,\r\n    current: 1,\r\n    pageSize: 10\r\n  }\r\n\r\n  // 分页条件\r\n  pageable: Pageable = {\r\n    curr: this.pagination.current,\r\n    size: this.pagination.pageSize,\r\n    condition: {}\r\n  }\r\n\r\n  mounted() {\r\n    this.pageQueryUser()\r\n  }\r\n\r\n  // 分页查询用户\r\n  async pageQueryUser() {\r\n    const result = await request.pageList(this.pageable)\r\n    if (result.code === 0) {\r\n      this.users = result.data.data\r\n      this.pagination.total = result.data.count\r\n    } else {\r\n      message.error(result.msg)\r\n    }\r\n  }\r\n\r\n  // 表格变动监听\r\n  handleTableChange(pag: Pagination, filters: TableStateFilters, sorter: {field: string; order: string; columnKey: string}) {\r\n      this.pagination.current = pag?.current || 1\r\n      this.pageable.curr = this.pagination.current\r\n      this.pageable.sortField = sorter.columnKey || ''\r\n      this.pageable.sortOrder = orderMap[sorter.order] || ''\r\n      this.pageable.condition.name = (filters.name instanceof Array ? filters.name[0] : '')\r\n      this.pageQueryUser()\r\n  }\r\n\r\n  /** 列表搜索 */\r\n  handleSearch(selectedKeys: string[], confirm: Function, dataIndex: string) {\r\n    confirm()\r\n    this.searchText = selectedKeys[0] || ''\r\n    this.searchedColumn = dataIndex\r\n  }\r\n\r\n  /** 查询条件重置 */\r\n  handleReset(clearFilters: Function) {\r\n    clearFilters()\r\n    this.searchText = ''\r\n  }\r\n\r\n  /** 删除人员 */\r\n  async onUserDel(user: User) {\r\n    const ret = await request.delete(user.id as number)\r\n    if (ret.code === 0) {\r\n      this.pageQueryUser()\r\n    } else {\r\n      message.error(`删除失败:${ret.msg}`)\r\n    }\r\n  }\r\n\r\n  // 编辑人员\r\n  onUserEdit(user: User) {\r\n    this.$dialog({\r\n      title: '用户信息',\r\n      width: 550,\r\n      height: 650,\r\n      max: false,\r\n      content: {\r\n        handle: true,\r\n        component: UserForm,\r\n        props: { id: user.id }\r\n      },\r\n      ok: () => {\r\n        this.pageQueryUser()\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 人员置顶\r\n  async onUserTop(user: User) {\r\n    const ret = await request.top(user.id as number, user.deptId as number)\r\n    if (ret.code === 0) {\r\n      this.pageQueryUser()\r\n    } else {\r\n      message.error(`置顶失败:${ret.msg}`)\r\n    }\r\n  }\r\n\r\n  userStatus(user: User) {\r\n    return user.status === 1\r\n  }\r\n\r\n  /** 改变用户状态 */\r\n  async onUserChange(user: User) {\r\n    user.status = user.status === 1 ? 0 : 1\r\n    const ret = await request.update(user)\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      user.status = user.status === 1 ? 0 : 1\r\n    }\r\n  }\r\n\r\n  // 节点选择\r\n  onSelectGroup(selectedKeys: string[], info: SelectEvent) {\r\n    console.log(selectedKeys, info)\r\n    this.pageable.condition.orgcode = info.node.dataRef.code\r\n    this.pageQueryUser()\r\n  }\r\n}\r\n","import { render } from \"./User.vue?vue&type=template&id=3fa479ac&scoped=true\"\nimport script from \"./User.vue?vue&type=script&lang=ts\"\nexport * from \"./User.vue?vue&type=script&lang=ts\"\n\nimport \"./User.vue?vue&type=style&index=0&id=3fa479ac&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-3fa479ac\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./User.vue?vue&type=style&index=0&id=3fa479ac&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./UserForm.vue?vue&type=style&index=0&id=e3f829f8&scoped=true&lang=css\"","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n"],"sourceRoot":""}