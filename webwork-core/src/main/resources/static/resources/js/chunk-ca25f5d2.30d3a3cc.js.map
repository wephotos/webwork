{"version":3,"sources":["webpack:///./src/request/GroupRequest.ts","webpack:///./src/views/Group.vue","webpack:///./src/views/GroupForm.vue","webpack:///./src/views/GroupForm.vue?71f2","webpack:///./src/views/GroupForm.vue?2159","webpack:///./src/views/Group.vue?0441","webpack:///./src/views/Group.vue?5ef1","webpack:///./src/request/UserRequest.ts","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./src/views/UserForm.vue","webpack:///./src/views/UserForm.vue?be01","webpack:///./src/views/UserForm.vue?5af4","webpack:///./src/views/UserForm.vue?aaf0"],"names":["GroupRequest","id","data","parentId","request","load-data","onLoadData","tree-data","treeData","expandedKeys","draggable","onSelect","style","title","trigger","overlay","menuKey","onContextMenuClick","node","type","key","contextMenuKeys","ADD_DEPT","ADD_GROUP","UPDATE_GROUP","DELETE_GROUP","ADD_USER","UPDATE_DEPT","DELETE_DEPT","ref","model","formData","rules","label-col","wrapper-col","label","name","value","isTop","defaultValue","parentName","disabled","onSelectTreeExpand","tree-default-expand-all","placeholder","dropdown-style","virtual","checked","enabled","onSubmit","onCancel","formRef","required","message","max","this","deepTreeNodes","ret","code","error","msg","toAntTreeNodes","find","treeNode","Promise","resolve","dataRef","children","then","toChildren","console","log","formUnref","validate","status","update","add","dialog","_ok","catch","_close","map","isLeaf","selectable","nodes","props","String","Number","Object","render","ContextMenuKeys","selectedKeys","info","$emit","confirm","okType","onOk","delete","res","success","loop","item","index","arr","splice","err","$dialog","width","height","content","handle","component","UserForm","deptId","deptName","ok","args","push","dataToTreeDataItem","oldValue","callback","forEach","emits","UserRequest","user","userId","pageable","$","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","len","length","actualStart","argumentsLength","arguments","TypeError","class","colon","gutter","span","avatarData","list-type","show-upload-list","action","withCredentials","handleUploadChange","before-upload","beforeUpload","avatar","avatarKey","src","avatarUrl","alt","avatarLoading","prefix","account","password","phone","email","post","handleUserStatus","random","pattern","file","response","objectName","isJpgOrPng","isLt2M","size","components","UserOutlined","LockOutlined","MobileOutlined","MailOutlined","PlusOutlined","LoadingOutlined","__scopeId"],"mappings":"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","file":"resources/js/chunk-ca25f5d2.30d3a3cc.js","sourcesContent":["import { Group } from '@/types/Group'\r\nimport { TreeNode } from '@/types/TreeNode'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 组织机构接口请求 */\r\nexport class GroupRequest extends BaseRequest {\r\n    /** 根据ID查询组织 */\r\n    find(id: string) {\r\n        return super.get<Group>(`/organization/get/${id}`)\r\n    }\r\n\r\n    /** 根据ID删除组织 */\r\n    delete(id: string) {\r\n        return super.get(`/organization/delete/${id}`)\r\n    }\r\n\r\n    /** 添加组织机构 */\r\n    add(data: Group) {\r\n        return super.post('/organization/add', data)\r\n    }\r\n\r\n    /** 更新组织机构 */\r\n    update(data: Group) {\r\n        return super.post('/organization/update', data)\r\n    }\r\n\r\n    /** 查询子级  */\r\n    children(parentId = '') {\r\n        return super.get<Group[]>(`/organization/children?parentId=${parentId}`)\r\n    }\r\n    /** 当前组织节点树 */\r\n    deepTreeNodes() {\r\n        return super.get<TreeNode[]>('/organization/deep-tree-nodes')\r\n    }\r\n}\r\n\r\nconst request = new GroupRequest()\r\nexport default request\r\n","<template >\r\n  <a-tree\r\n    :load-data=\"onLoadData\"\r\n    :tree-data=\"treeData\"\r\n    v-model:expandedKeys=\"expandedKeys\"\r\n    draggable\r\n    @select=\"onSelect\"\r\n    style=\"height: 100%\"\r\n    @contextmenu.prevent\r\n  >\r\n    <template #title=\"node\">\r\n      <a-dropdown :trigger=\"['contextmenu']\">\r\n        <span @contextmenu.prevent>{{ node.title }}</span>\r\n        <template #overlay>\r\n          <a-menu\r\n            @click=\"({ key: menuKey }) => onContextMenuClick(node, menuKey)\"\r\n          >\r\n            <!-- 单位菜单 -->\r\n            <template v-if=\"node.type == 1 || node.type == 0\">\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_DEPT\"\r\n                >新增部门</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_GROUP\"\r\n                >新增单位</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.UPDATE_GROUP\"\r\n                >更新单位</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.DELETE_GROUP\">\r\n                删除单位\r\n              </a-menu-item>\r\n            </template>\r\n            <!-- 部门菜单 -->\r\n            <template v-if=\"node.type == 2\">\r\n              <a-menu-item :key=\"contextMenuKeys.ADD_USER\"\r\n                >新增人员</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.UPDATE_DEPT\"\r\n                >更新部门</a-menu-item\r\n              >\r\n              <a-menu-item :key=\"contextMenuKeys.DELETE_DEPT\"\r\n                >删除部门</a-menu-item\r\n              >\r\n            </template>\r\n          </a-menu>\r\n        </template>\r\n      </a-dropdown>\r\n    </template>\r\n  </a-tree>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message, Modal } from 'ant-design-vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { R } from '@/types/R'\r\nimport { Group } from '@/types/Group'\r\nimport UserForm from './UserForm.vue'\r\nimport GroupForm from './GroupForm.vue'\r\n// 右键菜单键\r\nenum ContextMenuKeys {\r\n  // 新增人员\r\n  ADD_USER,\r\n  // 添加部门\r\n  ADD_DEPT,\r\n  // 添加单位\r\n  ADD_GROUP,\r\n  // 更新部门\r\n  UPDATE_DEPT,\r\n  // 更新单位\r\n  UPDATE_GROUP,\r\n  // 删除部门\r\n  DELETE_DEPT,\r\n  // 删除单位\r\n  DELETE_GROUP\r\n}\r\n/**\r\n * 组织机构管理\r\n */\r\n@Options({\r\n  emits: ['select']\r\n})\r\nexport default class GroupVue extends Vue {\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 展开的KEY\r\n  expandedKeys: string[] = []\r\n  // 右键菜单\r\n  contextMenuKeys = ContextMenuKeys\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.children()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toChildren(ret)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.key as string).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    this.$emit('select', selectedKeys, info)\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}, menuKey: ContextMenuKeys) {\r\n    let title\r\n    let props: {\r\n      id?: string;\r\n      type?: number;\r\n      parentId?: string;\r\n      parentName?: string;\r\n    }\r\n    if (ContextMenuKeys.ADD_DEPT === menuKey) {\r\n      title = '新增部门'\r\n      props = {\r\n        type: 2,\r\n        parentId: node.key as string,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.ADD_GROUP === menuKey) {\r\n      title = '新增单位'\r\n      props = {\r\n        type: 1,\r\n        parentId: node.key as string,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_DEPT === menuKey) {\r\n      title = '更新部门'\r\n      props = {\r\n        type: 2,\r\n        id: node.key as string\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_GROUP === menuKey) {\r\n      title = '更新单位'\r\n      props = {\r\n        type: 1,\r\n        id: node.key as string\r\n      }\r\n    } else if (\r\n      ContextMenuKeys.DELETE_DEPT === menuKey ||\r\n      ContextMenuKeys.DELETE_GROUP === menuKey\r\n    ) {\r\n      Modal.confirm({\r\n        title: `您确定要删除<${node.title}>吗?`,\r\n        okType: 'danger',\r\n        onOk: () => {\r\n          request\r\n            .delete(node.key as string)\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                message.success('删除成功')\r\n                this.loop(\r\n                  this.treeData,\r\n                  node.key as string,\r\n                  (item, index, arr) => {\r\n                    arr.splice(index, 1)\r\n                  }\r\n                )\r\n              } else {\r\n                message.error('删除失败:' + res.msg)\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              message.error(err.message)\r\n            })\r\n        }\r\n      })\r\n\r\n      return false\r\n    } else if (ContextMenuKeys.ADD_USER === menuKey) {\r\n      this.$dialog({\r\n        title: '新增用户',\r\n        width: 550,\r\n        height: 650,\r\n        max: false,\r\n        content: {\r\n          handle: true,\r\n          component: UserForm,\r\n          props: { deptId: node.key, deptName: name }\r\n        },\r\n        ok: () => {\r\n            this.$emit('select', [node.key], {\r\n                node: {\r\n                    dataRef: {\r\n                        code: node.code\r\n                    }\r\n                }\r\n            })\r\n            return true\r\n        }\r\n      })\r\n      return false\r\n    } else {\r\n      console.log(`unknow menukey ${menuKey}`)\r\n      return false\r\n    }\r\n    this.$dialog({\r\n      title: title,\r\n      width: 550,\r\n      height: 400,\r\n      content: {\r\n        handle: true,\r\n        props: props,\r\n        component: GroupForm\r\n      },\r\n      ok: (args: unknown[]) => {\r\n        const data = args[0] as Group\r\n        if (node.key === data.id) {\r\n          // 更新\r\n          node.dataRef.title = data.name\r\n        } else if (node.key === data.parentId) {\r\n          // 当前节点下新增\r\n          if (node.dataRef.children) {\r\n            node.dataRef.children.push(this.dataToTreeDataItem(data))\r\n          } else {\r\n            this.onLoadData(node)\r\n          }\r\n        } else {\r\n          // 非当前节点下新增\r\n          this.loop(\r\n            this.treeData,\r\n            data.parentId as string,\r\n            (item, index, arr) => {\r\n              item.children && item.children.push(this.dataToTreeDataItem(data))\r\n            }\r\n          )\r\n        }\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 属性监听\r\n  watchExpandedKeys(value: string[], oldValue: string[]) {\r\n    console.log('expandedKeys', value, oldValue)\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<Group[]>) {\r\n    return ret.data.map((value) => {\r\n      return this.dataToTreeDataItem(value)\r\n    })\r\n  }\r\n\r\n  // 数据转树节点\r\n  dataToTreeDataItem(data: Group) {\r\n    return {\r\n      key: data.id,\r\n      type: data.type, // 节点类型 0虚拟节点 1组织 2部门\r\n      title: data.name,\r\n      code: data.code,\r\n      isLeaf: data.type === 2\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    :model=\"formData\"\r\n    :rules=\"rules\"\r\n    :label-col=\"{ span: 4 }\"\r\n    :wrapper-col=\"{ span: 18 }\"\r\n    style=\"margin-top: 15px\"\r\n  >\r\n    <a-form-item label=\"节点名称\" name=\"name\">\r\n      <a-input v-model:value=\"formData.name\" />\r\n    </a-form-item>\r\n    <a-form-item\r\n      v-if=\"!isTop\"\r\n      label=\"上级单位\"\r\n      name=\"parentId\"\r\n    >\r\n      <a-tree-select\r\n        v-model:value=\"formData.parentId\"\r\n        :defaultValue=\"formData.parentName\"\r\n        :disabled=\"!!id\"\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        @treeExpand=\"onSelectTreeExpand\"\r\n        tree-default-expand-all\r\n        style=\"width: 100%\"\r\n        placeholder=\"请选择上级单位\"\r\n        :dropdown-style=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n      />\r\n    </a-form-item>\r\n    <a-form-item v-if=\"!isTop && type == 1\" label=\"虚拟节点\" name=\"virtual\">\r\n      <a-radio-group v-model:value=\"formData.virtual\">\r\n        <a-radio :value=\"true\">是</a-radio>\r\n        <a-radio :value=\"false\">否</a-radio>\r\n      </a-radio-group>\r\n    </a-form-item>\r\n    <a-form-item v-if=\"!isTop\" label=\"节点状态\" name=\"enabled\">\r\n      <a-switch v-model:checked=\"formData.enabled\" />\r\n    </a-form-item>\r\n    <a-form-item :wrapper-col=\"{ span: 14, offset: 4 }\">\r\n      <a-button type=\"primary\" @click=\"onSubmit\">提交</a-button>\r\n      <a-button style=\"margin-left: 10px\" @click=\"onCancel\">取消</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\n/**\r\n * 组织机构表单\r\n */\r\n@Options({\r\n  props: {\r\n    id: {\r\n      type: String\r\n    },\r\n    type: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: String\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class GroupForm extends Vue {\r\n  // 节点ID\r\n  id!: string\r\n  // 节点类型\r\n  type!: number\r\n  // 父级节点\r\n  parentId!: string\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单数据\r\n  formData: Group & {\r\n    enabled?: boolean;\r\n    virtual?: boolean;\r\n    parentName?: string;\r\n  } = {\r\n    id: this.id,\r\n    enabled: true, // 默认启用\r\n    virtual: false, // 默认非虚拟节点\r\n    parentId: this.parentId,\r\n    parentName: this.parentName\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入名称', trigger: 'blur' },\r\n      { max: 50, message: '名称最多50个字符' }\r\n    ],\r\n    parentId: [{ required: true, message: '请选择上级单位', trigger: 'blur' }]\r\n  }\r\n\r\n  // 是否顶级单位\r\n  get isTop() {\r\n    return !(this.parentId || this.formData.parentId)\r\n  }\r\n\r\n  // 加载数据\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.deepTreeNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toAntTreeNodes(ret.data)\r\n\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code !== 0) {\r\n        message.error(ret.msg)\r\n        return false\r\n      }\r\n      this.formData = {\r\n        ...this.formData,\r\n        ...ret.data\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.key as string).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  onSelectTreeExpand(expandedKeys: string[]) {\r\n    console.log(expandedKeys)\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          data.type = data.virtual ? 0 : this.type\r\n          data.status = data.enabled ? 1 : 0\r\n          delete data.virtual\r\n          delete data.enabled\r\n\r\n          let ret\r\n          if (this.id) {\r\n            ret = await request.update(data)\r\n          } else {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          }\r\n          if (ret.code !== 0) {\r\n            message.error(`错误:${ret.msg}`)\r\n          } else {\r\n            this.dialog._ok(data)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<Group>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<Group[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 1\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 转换为 Ant树节点\r\n  toAntTreeNodes(nodes: TreeNode[]): TreeDataItem[] {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: node.id,\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: node.type === 1,\r\n        children: this.toAntTreeNodes(node.children)\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n</script>\r\n","\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\nimport { PropType, ref, toRaw, unref } from '@vue/runtime-core'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport { message } from 'ant-design-vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { TreeNode } from '@/types/TreeNode'\r\n/**\r\n * 组织机构表单\r\n */\r\n@Options({\r\n  props: {\r\n    id: {\r\n      type: String\r\n    },\r\n    type: {\r\n      type: Number\r\n    },\r\n    parentId: {\r\n      type: String\r\n    },\r\n    parentName: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class GroupForm extends Vue {\r\n  // 节点ID\r\n  id!: string\r\n  // 节点类型\r\n  type!: number\r\n  // 父级节点\r\n  parentId!: string\r\n  parentName!: string\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单数据\r\n  formData: Group & {\r\n    enabled?: boolean;\r\n    virtual?: boolean;\r\n    parentName?: string;\r\n  } = {\r\n    id: this.id,\r\n    enabled: true, // 默认启用\r\n    virtual: false, // 默认非虚拟节点\r\n    parentId: this.parentId,\r\n    parentName: this.parentName\r\n  }\r\n\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [\r\n      { required: true, message: '请输入名称', trigger: 'blur' },\r\n      { max: 50, message: '名称最多50个字符' }\r\n    ],\r\n    parentId: [{ required: true, message: '请选择上级单位', trigger: 'blur' }]\r\n  }\r\n\r\n  // 是否顶级单位\r\n  get isTop() {\r\n    return !(this.parentId || this.formData.parentId)\r\n  }\r\n\r\n  // 加载数据\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.deepTreeNodes()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toAntTreeNodes(ret.data)\r\n\r\n    // 加载当前节点\r\n    if (this.id) {\r\n      const ret = await request.find(this.id)\r\n      if (ret.code !== 0) {\r\n        message.error(ret.msg)\r\n        return false\r\n      }\r\n      this.formData = {\r\n        ...this.formData,\r\n        ...ret.data\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.key as string).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  onSelectTreeExpand(expandedKeys: string[]) {\r\n    console.log(expandedKeys)\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          const data = { ...toRaw(this.formData) }\r\n          data.type = data.virtual ? 0 : this.type\r\n          data.status = data.enabled ? 1 : 0\r\n          delete data.virtual\r\n          delete data.enabled\r\n\r\n          let ret\r\n          if (this.id) {\r\n            ret = await request.update(data)\r\n          } else {\r\n            ret = await request.add(data)\r\n            data.id = ret.data\r\n          }\r\n          if (ret.code !== 0) {\r\n            message.error(`错误:${ret.msg}`)\r\n          } else {\r\n            this.dialog._ok(data)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<Group>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<Group[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 1\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n\r\n  // 转换为 Ant树节点\r\n  toAntTreeNodes(nodes: TreeNode[]): TreeDataItem[] {\r\n    return nodes.map((node) => {\r\n      return {\r\n        key: node.id,\r\n        type: node.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: node.id,\r\n        title: node.name,\r\n        code: node.code,\r\n        isLeaf: node.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: node.type === 1,\r\n        children: this.toAntTreeNodes(node.children)\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./GroupForm.vue?vue&type=template&id=d21435a4\"\nimport script from \"./GroupForm.vue?vue&type=script&lang=ts\"\nexport * from \"./GroupForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { TreeDataItem, SelectEvent } from 'ant-design-vue/es/tree/Tree'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport { message, Modal } from 'ant-design-vue'\r\nimport request from '@/request/GroupRequest'\r\nimport { R } from '@/types/R'\r\nimport { Group } from '@/types/Group'\r\nimport UserForm from './UserForm.vue'\r\nimport GroupForm from './GroupForm.vue'\r\n// 右键菜单键\r\nenum ContextMenuKeys {\r\n  // 新增人员\r\n  ADD_USER,\r\n  // 添加部门\r\n  ADD_DEPT,\r\n  // 添加单位\r\n  ADD_GROUP,\r\n  // 更新部门\r\n  UPDATE_DEPT,\r\n  // 更新单位\r\n  UPDATE_GROUP,\r\n  // 删除部门\r\n  DELETE_DEPT,\r\n  // 删除单位\r\n  DELETE_GROUP\r\n}\r\n/**\r\n * 组织机构管理\r\n */\r\n@Options({\r\n  emits: ['select']\r\n})\r\nexport default class GroupVue extends Vue {\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 展开的KEY\r\n  expandedKeys: string[] = []\r\n  // 右键菜单\r\n  contextMenuKeys = ContextMenuKeys\r\n  /**\r\n   * 页面挂载后\r\n   */\r\n  async mounted() {\r\n    // 加载组织机构根节点\r\n    const ret = await request.children()\r\n    if (ret.code !== 0) {\r\n      message.error(ret.msg)\r\n      return false\r\n    }\r\n    this.treeData = this.toChildren(ret)\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: TreeDataItem) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      request.children(treeNode.dataRef.key as string).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  // 节点点击事件\r\n  onSelect(selectedKeys: string[], info: SelectEvent) {\r\n    this.$emit('select', selectedKeys, info)\r\n  }\r\n\r\n  // 右键菜单\r\n  onContextMenuClick(node: TreeDataItem & {}, menuKey: ContextMenuKeys) {\r\n    let title\r\n    let props: {\r\n      id?: string;\r\n      type?: number;\r\n      parentId?: string;\r\n      parentName?: string;\r\n    }\r\n    if (ContextMenuKeys.ADD_DEPT === menuKey) {\r\n      title = '新增部门'\r\n      props = {\r\n        type: 2,\r\n        parentId: node.key as string,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.ADD_GROUP === menuKey) {\r\n      title = '新增单位'\r\n      props = {\r\n        type: 1,\r\n        parentId: node.key as string,\r\n        parentName: node.title\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_DEPT === menuKey) {\r\n      title = '更新部门'\r\n      props = {\r\n        type: 2,\r\n        id: node.key as string\r\n      }\r\n    } else if (ContextMenuKeys.UPDATE_GROUP === menuKey) {\r\n      title = '更新单位'\r\n      props = {\r\n        type: 1,\r\n        id: node.key as string\r\n      }\r\n    } else if (\r\n      ContextMenuKeys.DELETE_DEPT === menuKey ||\r\n      ContextMenuKeys.DELETE_GROUP === menuKey\r\n    ) {\r\n      Modal.confirm({\r\n        title: `您确定要删除<${node.title}>吗?`,\r\n        okType: 'danger',\r\n        onOk: () => {\r\n          request\r\n            .delete(node.key as string)\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                message.success('删除成功')\r\n                this.loop(\r\n                  this.treeData,\r\n                  node.key as string,\r\n                  (item, index, arr) => {\r\n                    arr.splice(index, 1)\r\n                  }\r\n                )\r\n              } else {\r\n                message.error('删除失败:' + res.msg)\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              message.error(err.message)\r\n            })\r\n        }\r\n      })\r\n\r\n      return false\r\n    } else if (ContextMenuKeys.ADD_USER === menuKey) {\r\n      this.$dialog({\r\n        title: '新增用户',\r\n        width: 550,\r\n        height: 650,\r\n        max: false,\r\n        content: {\r\n          handle: true,\r\n          component: UserForm,\r\n          props: { deptId: node.key, deptName: name }\r\n        },\r\n        ok: () => {\r\n            this.$emit('select', [node.key], {\r\n                node: {\r\n                    dataRef: {\r\n                        code: node.code\r\n                    }\r\n                }\r\n            })\r\n            return true\r\n        }\r\n      })\r\n      return false\r\n    } else {\r\n      console.log(`unknow menukey ${menuKey}`)\r\n      return false\r\n    }\r\n    this.$dialog({\r\n      title: title,\r\n      width: 550,\r\n      height: 400,\r\n      content: {\r\n        handle: true,\r\n        props: props,\r\n        component: GroupForm\r\n      },\r\n      ok: (args: unknown[]) => {\r\n        const data = args[0] as Group\r\n        if (node.key === data.id) {\r\n          // 更新\r\n          node.dataRef.title = data.name\r\n        } else if (node.key === data.parentId) {\r\n          // 当前节点下新增\r\n          if (node.dataRef.children) {\r\n            node.dataRef.children.push(this.dataToTreeDataItem(data))\r\n          } else {\r\n            this.onLoadData(node)\r\n          }\r\n        } else {\r\n          // 非当前节点下新增\r\n          this.loop(\r\n            this.treeData,\r\n            data.parentId as string,\r\n            (item, index, arr) => {\r\n              item.children && item.children.push(this.dataToTreeDataItem(data))\r\n            }\r\n          )\r\n        }\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  // 属性监听\r\n  watchExpandedKeys(value: string[], oldValue: string[]) {\r\n    console.log('expandedKeys', value, oldValue)\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<Group[]>) {\r\n    return ret.data.map((value) => {\r\n      return this.dataToTreeDataItem(value)\r\n    })\r\n  }\r\n\r\n  // 数据转树节点\r\n  dataToTreeDataItem(data: Group) {\r\n    return {\r\n      key: data.id,\r\n      type: data.type, // 节点类型 0虚拟节点 1组织 2部门\r\n      title: data.name,\r\n      code: data.code,\r\n      isLeaf: data.type === 2\r\n    } as TreeDataItem\r\n  }\r\n\r\n  // 查询树节点\r\n  loop(\r\n    data: TreeDataItem[],\r\n    key: string,\r\n    callback: (item: TreeDataItem, index: number, arr: TreeDataItem[]) => void\r\n  ) {\r\n    data.forEach((item, index, arr) => {\r\n      if (item.key === key) {\r\n        return callback(item, index, arr)\r\n      }\r\n      if (item.children) {\r\n        return this.loop(item.children, key, callback)\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./Group.vue?vue&type=template&id=74f0b01a\"\nimport script from \"./Group.vue?vue&type=script&lang=ts\"\nexport * from \"./Group.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import Page from '@/types/Page'\r\nimport Pageable from '@/types/Pageable'\r\nimport { User } from '@/types/User'\r\nimport BaseRequest from './BaseRequest'\r\n\r\n/** 用户请求 */\r\nexport class UserRequest extends BaseRequest {\r\n    /** 根据ID查询用户 */\r\n    find(id: string) {\r\n        return super.get<User>(`/user/get/${id}`)\r\n    }\r\n\r\n    /** 根据ID删除用户 */\r\n    delete(id: string) {\r\n        return super.get(`/user/delete/${id}`)\r\n    }\r\n\r\n    /** 添加用户 */\r\n    add(user: User) {\r\n        return super.post('/user/add', user)\r\n    }\r\n\r\n    /** 更新用户 */\r\n    update(user: User) {\r\n        return super.post('/user/update', user)\r\n    }\r\n    /**\r\n     * 用户置顶\r\n     * @param userId 用户ID\r\n     * @param deptId 部门ID\r\n     * @returns R<boolean>\r\n     */\r\n    top(userId: string, deptId: string) {\r\n        return super.get(`/user/top?userId=${userId}&deptId=${deptId}`)\r\n    }\r\n\r\n    /** 分页查询 */\r\n    pageList(pageable: Pageable) {\r\n        return super.post<Page<User>>('/user/page', pageable)\r\n    }\r\n}\r\nconst request = new UserRequest()\r\nexport default request\r\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","<template>\r\n  <a-form\r\n    ref=\"formRef\"\r\n    :colon=\"false\"\r\n    :model=\"user\"\r\n    :rules=\"rules\"\r\n    :label-col=\"{ span: 4 }\"\r\n    :wrapper-col=\"{ span: 18 }\"\r\n  >\r\n    <a-row type=\"flex\" :gutter=\"8\" style=\"margin: 0px\">\r\n      <a-col :span=\"4\"></a-col>\r\n      <a-col :span=\"6\">\r\n        <a-upload\r\n          name=\"file\"\r\n          :data=\"avatarData\"\r\n          list-type=\"picture-card\"\r\n          class=\"avatar-uploader\"\r\n          :show-upload-list=\"false\"\r\n          action=\"/file/upload\"\r\n          :withCredentials=\"true\"\r\n          @change=\"handleUploadChange\"\r\n          :before-upload=\"beforeUpload\"\r\n        >\r\n          <img :key=\"avatarKey\" v-if=\"user.avatar\" :src=\"avatarUrl\" alt=\"头像\" />\r\n          <div v-else>\r\n            <loading-outlined v-if=\"avatarLoading\"></loading-outlined>\r\n            <plus-outlined v-else></plus-outlined>\r\n            <div class=\"ant-upload-text\">Upload</div>\r\n          </div>\r\n        </a-upload>\r\n      </a-col>\r\n      <a-col :span=\"12\">\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"name\">\r\n          <a-input v-model:value=\"user.name\" placeholder=\"姓名\">\r\n            <template #prefix\r\n              ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"account\">\r\n          <a-input v-model:value=\"user.account\" placeholder=\"账号\">\r\n            <template #prefix\r\n              ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n        <a-form-item :wrapper-col=\"{ flex: 'auto' }\" name=\"password\">\r\n          <a-input\r\n            v-model:value=\"user.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n          >\r\n            <template #prefix\r\n              ><LockOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n            /></template>\r\n          </a-input>\r\n        </a-form-item>\r\n      </a-col>\r\n    </a-row>\r\n\r\n    <a-form-item label=\"手机\" name=\"phone\">\r\n      <a-input v-model:value=\"user.phone\" placeholder=\"手机\">\r\n        <template #prefix\r\n          ><MobileOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"邮箱\" name=\"email\">\r\n      <a-input v-model:value=\"user.email\" placeholder=\"邮箱\">\r\n        <template #prefix\r\n          ><MailOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"职务\">\r\n      <a-input v-model:value=\"user.post\" placeholder=\"职务\">\r\n        <template #prefix\r\n          ><UserOutlined style=\"color: rgba(0, 0, 0, 0.25)\"\r\n        /></template>\r\n      </a-input>\r\n    </a-form-item>\r\n    <a-form-item label=\"部门\">\r\n      <a-tree-select\r\n        v-if=\"treeData.length\"\r\n        :tree-data=\"treeData\"\r\n        :load-data=\"onLoadData\"\r\n        v-model:value=\"user.deptId\"\r\n        tree-default-expand-all\r\n        style=\"width: 100%\"\r\n        placeholder=\"请选择用户部门\"\r\n        :dropdown-style=\"{ maxHeight: '400px', overflow: 'auto' }\"\r\n      />\r\n    </a-form-item>\r\n    <a-form-item label=\"状态\">\r\n      <a-switch :checked=\"user.status == 1\" @click=\"handleUserStatus\" />\r\n    </a-form-item>\r\n    <a-form-item :wrapper-col=\"{ span: 14, offset: 4 }\">\r\n      <a-button type=\"primary\" @click=\"onSubmit\">保存</a-button>\r\n      <a-button style=\"margin-left: 10px\" @click=\"onCancel\">取消</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { PropType, ref, toRaw, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\nimport { User } from '@/types/User'\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport request from '@/request/UserRequest'\r\nimport GroupRequest from '@/request/GroupRequest'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\n\r\ninterface FileItem {\r\n  uid: string;\r\n  name?: string;\r\n  status?: string;\r\n  response?: R<any>;\r\n  url?: string;\r\n  type?: string;\r\n  size: number;\r\n  originFileObj: any;\r\n}\r\n\r\ninterface FileInfo {\r\n  file: FileItem;\r\n  fileList: FileItem[];\r\n}\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: String\r\n    },\r\n    deptId: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class UserForm extends Vue {\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 用户ID，传入参数\r\n  id!: string\r\n  // 部门ID\r\n  deptId!: string\r\n  // 用户对象数据\r\n  user: User = {\r\n    status: 1,\r\n    deptId: this.deptId\r\n  }\r\n\r\n  avatarKey = Math.random()\r\n  // 头像上传标志\r\n  avatarLoading = false\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [{ required: true, message: '请输入姓名', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    account: [{ required: true, message: '请输入账号', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    post: [{ max: 20, message: '最多输入20个字符' }],\r\n    password: [\r\n      { required: true, message: '请输入密码', trigger: 'blur' },\r\n      { min: 6, max: 15, message: '密码为6-15位字符串', trigger: 'blur' }\r\n    ],\r\n    phone: [\r\n      { pattern: /^1[0-9]{10}$/, message: '手机号码错误', trigger: 'blur' }\r\n    ],\r\n    email: [\r\n      {\r\n        pattern: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/,\r\n        message: '邮箱地址错误',\r\n        trigger: 'blur'\r\n      },\r\n      { max: 50, message: '最多输入50个字符' }\r\n    ]\r\n  }\r\n\r\n  // 用户头像地址\r\n  get avatarUrl() {\r\n    return `/file/download/thumb/${this.user.avatar}`\r\n  }\r\n\r\n  // 上传头像数据\r\n  get avatarData() {\r\n    return { objectName: this.user.avatar || '' }\r\n  }\r\n\r\n  // 头像上传前回调\r\n  beforeUpload(file: FileItem) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n  }\r\n\r\n  // 上传事件\r\n  handleUploadChange = (info: FileInfo) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.avatarLoading = true\r\n      return false\r\n    }\r\n    this.avatarLoading = false\r\n    if (info.file.status === 'done') {\r\n      if (info.file.response?.code === 0) {\r\n        this.user.avatar = info.file.response.data.objectName\r\n        this.avatarKey = Math.random()\r\n      } else {\r\n        message.error(info.file.response?.msg as string)\r\n      }\r\n    }\r\n    if (info.file.status === 'error') {\r\n      message.error('上传失败')\r\n    }\r\n  }\r\n\r\n  // 挂载后执行\r\n  async mounted() {\r\n    // 加载组织树数据\r\n    const ret = await GroupRequest.children()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toChildren(ret)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载用户信息\r\n    this.id &&\r\n      request.find(this.id).then((ret) => {\r\n        if (ret.code === 0) {\r\n          this.user = ret.data\r\n        } else {\r\n          message.error(ret.msg)\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      GroupRequest.children(treeNode.dataRef.key as string).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n        this.user.deptId = this.user.deptId || ''\r\n      })\r\n    })\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          let ret\r\n          if (!this.user.id) {\r\n            ret = await request.add(toRaw(this.user))\r\n          } else {\r\n            ret = await request.update(toRaw(this.user))\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok()\r\n          } else {\r\n            message.error(ret.msg)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<User>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 用户状态切换\r\n  handleUserStatus() {\r\n    this.user.status = this.user.status === 1 ? 0 : 1\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<Group[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 2\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.ant-form {\r\n  padding: 5px 0px;\r\n}\r\n.avatar-uploader > ::v-deep(.ant-upload) {\r\n  width: 130px;\r\n  height: 180px;\r\n}\r\n.ant-upload-select-picture-card i {\r\n  font-size: 32px;\r\n  color: #999;\r\n}\r\n\r\n.ant-upload-select-picture-card .ant-upload-text {\r\n  margin-top: 8px;\r\n  color: #666;\r\n}\r\n</style>\r\n","\r\nimport { PropType, ref, toRaw, unref } from 'vue'\r\nimport { Options, Vue } from 'vue-class-component'\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  MobileOutlined,\r\n  MailOutlined,\r\n  PlusOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons-vue'\r\nimport { User } from '@/types/User'\r\nimport Dialog from '@/components/Dialog.vue'\r\nimport { ValidateErrorEntity } from 'ant-design-vue/es/form/interface'\r\nimport request from '@/request/UserRequest'\r\nimport GroupRequest from '@/request/GroupRequest'\r\nimport { message } from 'ant-design-vue'\r\nimport { TreeDataItem } from 'ant-design-vue/es/tree/Tree'\r\nimport { Group } from '@/types/Group'\r\nimport { R } from '@/types/R'\r\n\r\ninterface FileItem {\r\n  uid: string;\r\n  name?: string;\r\n  status?: string;\r\n  response?: R<any>;\r\n  url?: string;\r\n  type?: string;\r\n  size: number;\r\n  originFileObj: any;\r\n}\r\n\r\ninterface FileInfo {\r\n  file: FileItem;\r\n  fileList: FileItem[];\r\n}\r\n\r\n@Options({\r\n  components: {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    PlusOutlined,\r\n    LoadingOutlined\r\n  },\r\n  props: {\r\n    id: {\r\n      type: String\r\n    },\r\n    deptId: {\r\n      type: String\r\n    },\r\n    dialog: Object as PropType<Dialog>\r\n  }\r\n})\r\nexport default class UserForm extends Vue {\r\n  // 当前弹框\r\n  dialog!: Dialog\r\n  // 用户ID，传入参数\r\n  id!: string\r\n  // 部门ID\r\n  deptId!: string\r\n  // 用户对象数据\r\n  user: User = {\r\n    status: 1,\r\n    deptId: this.deptId\r\n  }\r\n\r\n  avatarKey = Math.random()\r\n  // 头像上传标志\r\n  avatarLoading = false\r\n  // 组织树数据源\r\n  treeData: TreeDataItem[] = []\r\n  // 表单引用\r\n  formRef = ref<AntType.Form>()\r\n  // 验证规则\r\n  rules = {\r\n    name: [{ required: true, message: '请输入姓名', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    account: [{ required: true, message: '请输入账号', trigger: 'blur' }, { max: 20, message: '最多输入20个字符' }],\r\n    post: [{ max: 20, message: '最多输入20个字符' }],\r\n    password: [\r\n      { required: true, message: '请输入密码', trigger: 'blur' },\r\n      { min: 6, max: 15, message: '密码为6-15位字符串', trigger: 'blur' }\r\n    ],\r\n    phone: [\r\n      { pattern: /^1[0-9]{10}$/, message: '手机号码错误', trigger: 'blur' }\r\n    ],\r\n    email: [\r\n      {\r\n        pattern: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/,\r\n        message: '邮箱地址错误',\r\n        trigger: 'blur'\r\n      },\r\n      { max: 50, message: '最多输入50个字符' }\r\n    ]\r\n  }\r\n\r\n  // 用户头像地址\r\n  get avatarUrl() {\r\n    return `/file/download/thumb/${this.user.avatar}`\r\n  }\r\n\r\n  // 上传头像数据\r\n  get avatarData() {\r\n    return { objectName: this.user.avatar || '' }\r\n  }\r\n\r\n  // 头像上传前回调\r\n  beforeUpload(file: FileItem) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n  }\r\n\r\n  // 上传事件\r\n  handleUploadChange = (info: FileInfo) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.avatarLoading = true\r\n      return false\r\n    }\r\n    this.avatarLoading = false\r\n    if (info.file.status === 'done') {\r\n      if (info.file.response?.code === 0) {\r\n        this.user.avatar = info.file.response.data.objectName\r\n        this.avatarKey = Math.random()\r\n      } else {\r\n        message.error(info.file.response?.msg as string)\r\n      }\r\n    }\r\n    if (info.file.status === 'error') {\r\n      message.error('上传失败')\r\n    }\r\n  }\r\n\r\n  // 挂载后执行\r\n  async mounted() {\r\n    // 加载组织树数据\r\n    const ret = await GroupRequest.children()\r\n    if (ret.code === 0) {\r\n      this.treeData = this.toChildren(ret)\r\n    } else {\r\n      message.error(ret.msg)\r\n    }\r\n    // 加载用户信息\r\n    this.id &&\r\n      request.find(this.id).then((ret) => {\r\n        if (ret.code === 0) {\r\n          this.user = ret.data\r\n        } else {\r\n          message.error(ret.msg)\r\n        }\r\n      })\r\n  }\r\n\r\n  /**\r\n   * 加载节点数据\r\n   */\r\n  onLoadData(treeNode: { dataRef: TreeDataItem }) {\r\n    return new Promise((resolve: (value?: unknown) => void) => {\r\n      if (treeNode.dataRef.children) {\r\n        resolve()\r\n        return false\r\n      }\r\n      GroupRequest.children(treeNode.dataRef.key as string).then((ret) => {\r\n        treeNode.dataRef.children = this.toChildren(ret)\r\n        this.treeData = [...this.treeData]\r\n        resolve()\r\n        this.user.deptId = this.user.deptId || ''\r\n      })\r\n    })\r\n  }\r\n\r\n  // 保存\r\n  onSubmit() {\r\n    const formUnref = unref(this.formRef)\r\n    formUnref &&\r\n      formUnref\r\n        .validate()\r\n        .then(async () => {\r\n          let ret\r\n          if (!this.user.id) {\r\n            ret = await request.add(toRaw(this.user))\r\n          } else {\r\n            ret = await request.update(toRaw(this.user))\r\n          }\r\n          if (ret.code === 0) {\r\n            this.dialog._ok()\r\n          } else {\r\n            message.error(ret.msg)\r\n          }\r\n        })\r\n        .catch((error: ValidateErrorEntity<User>) => {\r\n          console.log('error', error)\r\n        })\r\n  }\r\n\r\n  // 取消\r\n  onCancel() {\r\n    this.dialog._close()\r\n  }\r\n\r\n  // 用户状态切换\r\n  handleUserStatus() {\r\n    this.user.status = this.user.status === 1 ? 0 : 1\r\n  }\r\n\r\n  // 转为树节点类型\r\n  toChildren(ret: R<Group[]>) {\r\n    return ret.data.map((value) => {\r\n      return {\r\n        key: value.id,\r\n        type: value.type, // 节点类型 0虚拟节点 1组织 2部门\r\n        value: value.id,\r\n        title: value.name,\r\n        code: value.code,\r\n        isLeaf: value.type === 2,\r\n        // disabled: value.type === 2\r\n        selectable: value.type === 2\r\n      } as TreeDataItem\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./UserForm.vue?vue&type=template&id=58b2e687&scoped=true\"\nimport script from \"./UserForm.vue?vue&type=script&lang=ts\"\nexport * from \"./UserForm.vue?vue&type=script&lang=ts\"\n\nimport \"./UserForm.vue?vue&type=style&index=0&id=58b2e687&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-58b2e687\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./UserForm.vue?vue&type=style&index=0&id=58b2e687&scoped=true&lang=css\""],"sourceRoot":""}